{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _actions = require(\"../../redux/actions\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _native = require(\"styled-components/native\");\n\nvar _masterStyle = require(\"../../theming/masterStyle\");\n\nvar _createStyle = require(\"../../theming/createStyle\");\n\nvar _formik = require(\"formik\");\n\nvar yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _reactNativeKeyboardAwareScrollView = require(\"react-native-keyboard-aware-scroll-view\");\n\nvar _reactNativePickerSelect = _interopRequireDefault(require(\"react-native-picker-select\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _ImagePicker = _interopRequireDefault(require(\"../ImagePicker\"));\n\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/SigningUp/GetUserInfo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nconsole.log(\"duw5ecfjn\");\nvar UserInfoSchema = yup.object({\n  gender: yup.string().required('required!!!'),\n  classification: yup.string().required('required!!!'),\n  major: yup.string().required('required!!!'),\n  graddate: yup.string().required('required!!!'),\n  hometown: yup.string().required('required!!!')\n});\n\nvar GetUserInfo = function (_Component) {\n  (0, _inherits2.default)(GetUserInfo, _Component);\n\n  var _super = _createSuper(GetUserInfo);\n\n  function GetUserInfo(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, GetUserInfo);\n    _this = _super.call(this, props);\n    _this.state = {\n      user: 'rghosh',\n      success: false,\n      bio: '',\n      gender: '',\n      classification: '',\n      major: '',\n      graddate: '',\n      hometown: '',\n      imageURI: '',\n      cloudinaryURL: null\n    };\n\n    _this.setImageURI = function (uri) {\n      _this.setState({\n        imageURI: uri\n      });\n\n      console.log(\"just set image in getuserinfo\");\n      console.log(_this.state);\n      var cloudFile = {\n        uri: _this.state.imageURI,\n        type: \"jpg\",\n        name: _this.state.user\n      };\n\n      _this.uploadToCloudinary(cloudFile);\n    };\n\n    console.log(\"IN GET USER INFO CONSTRUCTOR\");\n    return _this;\n  }\n\n  (0, _createClass2.default)(GetUserInfo, [{\n    key: \"uploadToCloudinary\",\n    value: function uploadToCloudinary(photo) {\n      var _this2 = this;\n\n      if (this.state.imageURI !== '') {\n        var data = new FormData();\n        data.append('cloud_name', \"duw5ecfjn\");\n        data.append('file', photo);\n        data.append('upload_preset', \"profile-pic\");\n        fetch(\"https://api.cloudinary.com/v1_1/duw5ecfjn/image/upload\", {\n          method: 'POST',\n          body: data\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          console.log(data);\n          console.log(data.secure_url);\n\n          _this2.setState({\n            cloudinaryURL: data.secure_url\n          });\n        });\n      }\n    }\n  }, {\n    key: \"setInfo\",\n    value: function setInfo(info) {\n      this.setState({\n        bio: info.bio,\n        gender: info.gender,\n        classification: info.classification,\n        major: info.major,\n        graddate: info.graddate,\n        hometown: info.hometown\n      });\n      console.log(this.state);\n      this.updateUserDB();\n    }\n  }, {\n    key: \"updateUserDB\",\n    value: function updateUserDB() {\n      var _this3 = this;\n\n      var updatedUser = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userID: this.state.user,\n          values: {\n            userHOMETOWN: this.state.hometown,\n            userMAJOR: this.state.major,\n            userGRAD_DATE: this.state.graddate,\n            userGRADE_LEVEL: this.state.classification,\n            userABOUT: this.state.bio,\n            userGENDER: this.state.gender,\n            userPROFILEPIC: this.state.cloudinaryURL\n          }\n        })\n      };\n      console.log(updatedUser);\n      fetch(\"http://mobile-app.ddns.uark.edu/CRUDapis/users/updateUser\", updatedUser).then(function (response) {\n        return response.text();\n      }).then(function (json) {\n        var data = JSON.parse(json);\n        console.log(data);\n\n        if (data.isError === false) {\n          _this3.setState({\n            success: true\n          });\n        } else {\n          _this3.setState({\n            success: false\n          });\n        }\n      }).catch(function (error) {\n        return console.error(error);\n      }).finally(function () {\n        if (_this3.state.success === true) {\n          _this3.props.navigation.navigate(\"Dashboard\");\n        } else {\n          _reactNative.Alert.alert(\"Hmmm...\", \"there was an error, please try again ):\", [{\n            text: \"okie\",\n            onPress: function onPress() {\n              return console.log(\"okay pressed\");\n            }\n          }], {\n            cancelable: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.state);\n      return _react.default.createElement(_native.ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, {\n        style: {\n          backgroundColor: this.props.theme.BG_COLOR,\n          flex: 1\n        },\n        resetScrollToCoords: {\n          x: 0,\n          y: 0\n        },\n        scrollEnabled: true,\n        keyboardShouldPersistTaps: 'handled',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_createStyle.CreateProfileContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_formik.Formik, {\n        validationSchema: UserInfoSchema,\n        initialValues: {\n          bio: '',\n          gender: '',\n          classification: '',\n          major: '',\n          graddate: '',\n          hometown: ''\n        },\n        onSubmit: function onSubmit(values) {\n          _this4.setInfo(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }, function (props) {\n        return _react.default.createElement(_createStyle.FormArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }\n        }, _react.default.createElement(_masterStyle.HeaderContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_masterStyle.HeaderText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 41\n          }\n        }, \"last step!\"), _react.default.createElement(_masterStyle.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 41\n          }\n        }, \"you're almost done! just need some last tidbits ..\")), _react.default.createElement(_createStyle.H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 37\n          }\n        }, \"first, some general info.\"), _react.default.createElement(_createStyle.H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 37\n          }\n        }, \"Set a profile image!\"), _react.default.createElement(_ImagePicker.default, {\n          setImageURI: _this4.setImageURI,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 41\n          }\n        }), _react.default.createElement(_createStyle.SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_createStyle.H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 37\n          }\n        }, \"what is your classification?\"), _react.default.createElement(_createStyle.ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 37\n          }\n        }, props.touched.classification && props.errors.classification)), _react.default.createElement(_reactNativePickerSelect.default, {\n          onValueChange: function onValueChange(value) {\n            return props.setFieldValue('classification', value);\n          },\n          items: [{\n            label: 'freshman',\n            value: 'freshman'\n          }, {\n            label: 'sophomore',\n            value: 'sophomore'\n          }, {\n            label: 'junior',\n            value: 'junior'\n          }, {\n            label: 'senior',\n            value: 'senior'\n          }, {\n            label: 'super senior',\n            value: 'super senior'\n          }, {\n            label: 'grad student',\n            value: 'grad student'\n          }],\n          style: {\n            inputIOS: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this4.props.theme.LIGHT_GREY,\n              color: _this4.props.theme.PRIMARY_COLOR,\n              margin: 10\n            },\n            inputAndroid: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this4.props.theme.LIGHT_GREY,\n              color: _this4.props.theme.PRIMARY_COLOR,\n              margin: 10\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 37\n          }\n        }), _react.default.createElement(_createStyle.SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_createStyle.H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 37\n          }\n        }, \"what is your primary major?\"), _react.default.createElement(_createStyle.ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 37\n          }\n        }, props.touched.major && props.errors.major)), _react.default.createElement(_reactNativePickerSelect.default, {\n          onValueChange: function onValueChange(value) {\n            return props.setFieldValue('major', value);\n          },\n          items: [{\n            label: 'computer science',\n            value: 'computer science'\n          }, {\n            label: 'computer engineering',\n            value: 'computer engineering'\n          }, {\n            label: 'mathematics',\n            value: 'mathematics'\n          }],\n          style: {\n            inputIOS: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this4.props.theme.LIGHT_GREY,\n              color: _this4.props.theme.PRIMARY_COLOR,\n              margin: 10\n            },\n            inputAndroid: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this4.props.theme.LIGHT_GREY,\n              color: _this4.props.theme.PRIMARY_COLOR,\n              margin: 10\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 37\n          }\n        }), _react.default.createElement(_createStyle.SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_createStyle.H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 37\n          }\n        }, \"when do u graduate?\"), _react.default.createElement(_createStyle.ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 37\n          }\n        }, props.touched.graddate && props.errors.graddate)), _react.default.createElement(_reactNativePickerSelect.default, {\n          onValueChange: function onValueChange(value) {\n            return props.setFieldValue('graddate', value);\n          },\n          items: [{\n            label: 'dec 2020',\n            value: 'dec 2020'\n          }, {\n            label: 'may 2021',\n            value: 'may 2021'\n          }, {\n            label: 'dec 2021',\n            value: 'dec 2021'\n          }, {\n            label: 'may 2022',\n            value: 'may 2022'\n          }, {\n            label: 'dec 2022',\n            value: 'dec 2022'\n          }],\n          style: {\n            inputIOS: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this4.props.theme.LIGHT_GREY,\n              color: _this4.props.theme.PRIMARY_COLOR,\n              margin: 10\n            },\n            inputAndroid: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this4.props.theme.LIGHT_GREY,\n              color: _this4.props.theme.PRIMARY_COLOR,\n              margin: 10\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 37\n          }\n        }), _react.default.createElement(_createStyle.H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 37\n          }\n        }, \"now tell us more about you!\"), _react.default.createElement(_createStyle.SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_createStyle.H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 37\n          }\n        }, \"your hometown?\"), _react.default.createElement(_createStyle.ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 37\n          }\n        }, props.touched.hometown && props.errors.hometown)), _react.default.createElement(_createStyle.SingleLineInput, {\n          placeholder: \"please tell us your hometown!\",\n          onChangeText: props.handleChange('hometown'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.hometown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 37\n          }\n        }), _react.default.createElement(_createStyle.SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_createStyle.H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 37\n          }\n        }, \"what is your gender identity?\"), _react.default.createElement(_createStyle.ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 37\n          }\n        }, props.touched.gender && props.errors.gender)), _react.default.createElement(_createStyle.SingleLineInput, {\n          placeholder: \"please tell us your gender!\",\n          onChangeText: props.handleChange('gender'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.gender,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 37\n          }\n        }), _react.default.createElement(_createStyle.SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_createStyle.H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 37\n          }\n        }, \"finally, a short bio\"), _react.default.createElement(_createStyle.ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 37\n          }\n        }, props.touched.bio && props.errors.bio)), _react.default.createElement(_createStyle.BioInput, {\n          placeholder: \"please enter a short bio! (250 words max)\",\n          onChangeText: props.handleChange('bio'),\n          maxLength: 150,\n          multiline: true,\n          numberOfLines: 7,\n          value: props.values.bio,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 37\n          }\n        }), _react.default.createElement(_masterStyle.Button, {\n          title: \"Submit\",\n          onPress: function onPress() {\n            return props.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_masterStyle.ButtonText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 41\n          }\n        }, \"i'm done!\")));\n      }))));\n    }\n  }]);\n  return GetUserInfo;\n}(_react.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, {\n  pickTheme: _actions.pickTheme\n})(GetUserInfo);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/SigningUp/GetUserInfo.js"],"names":["console","log","UserInfoSchema","yup","object","gender","string","required","classification","major","graddate","hometown","GetUserInfo","props","state","user","success","bio","imageURI","cloudinaryURL","setImageURI","uri","setState","cloudFile","type","name","uploadToCloudinary","photo","data","FormData","append","fetch","method","body","then","res","json","secure_url","info","updateUserDB","updatedUser","headers","JSON","stringify","userID","values","userHOMETOWN","userMAJOR","userGRAD_DATE","userGRADE_LEVEL","userABOUT","userGENDER","userPROFILEPIC","response","text","parse","isError","catch","error","finally","navigation","navigate","Alert","alert","onPress","cancelable","theme","backgroundColor","BG_COLOR","flex","x","y","setInfo","touched","errors","value","setFieldValue","label","inputIOS","padding","fontWeight","borderWidth","borderRadius","borderColor","LIGHT_GREY","color","PRIMARY_COLOR","margin","inputAndroid","handleChange","handleSubmit","Component","mapStateToProps","themeReducer","pickTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { pickTheme } from '../../redux/actions'\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Subtitle, Text, HeaderContainer, HeaderText, Button, ButtonText } from '../../theming/masterStyle'\nimport { BioInput, SectionArea, SingleLineInput, FormArea, CreateProfileContent, ErrorText, H1, H2 } from '../../theming/createStyle'\nimport { Formik } from 'formik'\nimport * as yup from 'yup';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport RNPickerSelect from 'react-native-picker-select';\nimport { Alert } from \"react-native\";\nimport {CLOUD_NAME, CLOUD_PRESET, CLOUD_BASE_API, CLOUD_API_KEY, CLOUD_API_SECRET} from \"@env\"\nimport ImagePickerExample from '../ImagePicker';\n\n\nconsole.log(CLOUD_NAME)\n// form validation\nconst UserInfoSchema = yup.object({\n    gender: yup.string().required('required!!!'), \n    classification: yup.string().required('required!!!'),\n    major: yup.string().required('required!!!'),\n    graddate: yup.string().required('required!!!'),\n    hometown: yup.string().required('required!!!'),\n})\n\nclass GetUserInfo extends Component {\n    constructor(props) {\n        super(props)\n        console.log(\"IN GET USER INFO CONSTRUCTOR\")\n        // console.log(props.route.params.user)\n    }\n\n    state = {\n        user: 'rghosh',\n        success: false,\n        bio: '', \n        gender: '', \n        classification: '',\n        major: '',\n        graddate: '',\n        hometown: '',\n        imageURI: '',\n        cloudinaryURL: null\n      }\n\n      setImageURI = (uri) => {\n        this.setState({ imageURI: uri })\n        console.log(\"just set image in getuserinfo\")\n        console.log(this.state)\n        let cloudFile = {uri: this.state.imageURI, type: \"jpg\"\n            , name: this.state.user}\n        this.uploadToCloudinary(cloudFile);\n      }\n\n      uploadToCloudinary(photo) {\n          if (this.state.imageURI !== '') {\n              const data = new FormData();\n              data.append('cloud_name', CLOUD_NAME)\n              data.append('file', photo)\n              data.append('upload_preset', CLOUD_PRESET)\n              \n              fetch(CLOUD_BASE_API, {\n                  method: 'POST',\n                  body: data\n              }).then(res=>res.json()).then(data=> {\n                  console.log(data)\n                  console.log(data.secure_url)\n                  this.setState({ cloudinaryURL: data.secure_url })\n              })\n          }\n      }\n\n      setInfo(info) {\n        \n        this.setState({\n            bio: info.bio, \n            gender: info.gender, \n            classification: info.classification,\n            major: info.major,\n            graddate: info.graddate,\n            hometown: info.hometown\n        })\n        console.log(this.state)\n        this.updateUserDB()\n    }\n\n    updateUserDB() {\n        const updatedUser={\n            method: 'POST',\n            headers:{'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                userID: this.state.user, \n                values: {\n                    userHOMETOWN: this.state.hometown,\n                    userMAJOR: this.state.major,\n                    userGRAD_DATE: this.state.graddate,\n                    userGRADE_LEVEL: this.state.classification,\n                    userABOUT: this.state.bio,\n                    userGENDER: this.state.gender,\n                    userPROFILEPIC: this.state.cloudinaryURL\n                }\n            })\n        }\n        console.log(updatedUser)\n        // call api endpoint, sending in user to add to db\n        fetch(`http://mobile-app.ddns.uark.edu/CRUDapis/users/updateUser`, updatedUser)\n            .then((response) => response.text())\n            .then((json) => {\n                // parse the response & extract data\n                let data = JSON.parse(json)\n                console.log(data)\n                if (data.isError === false) {\n                    this.setState({success: true})\n                } else {\n                    this.setState({success: false})\n                }\n                \n            })\n            .catch((error) => console.error(error))\n            .finally(() => {\n                if (this.state.success === true) {\n                    this.props.navigation.navigate(\n                        \"Dashboard\")\n                } else {\n                    Alert.alert(\n                        \"Hmmm...\",\n                        \"there was an error, please try again ):\",\n                        [\n                          { text: \"okie\", onPress: () => console.log(\"okay pressed\") }\n                        ],\n                        { cancelable: false }\n                      );\n                }  \n            })\n    }\n\n\n  render() {\n      console.log(this.state)\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            <KeyboardAwareScrollView\n                style={{ backgroundColor: this.props.theme.BG_COLOR, flex: 1 }}\n                resetScrollToCoords={{ x: 0, y: 0 }}\n                scrollEnabled={true}\n                keyboardShouldPersistTaps={'handled'}\n                >\n            <CreateProfileContent>   \n                        <Formik \n                            validationSchema={UserInfoSchema}\n                            initialValues={{ \n                                bio: '', \n                                gender: '', \n                                classification: '',\n                                major: '',\n                                graddate: '',\n                                hometown: ''\n                            }}\n                            // validationSchema={SignUpSchema}\n                            onSubmit={(values) => {\n                                this.setInfo(values)\n                            }}\n                        >\n                            {/* get access to props of Formik */}\n                            {(props) => (\n                                <FormArea>\n                                    <HeaderContainer>\n                                        <HeaderText>last step!</HeaderText>\n                                        <Subtitle>you're almost done! just need some last tidbits ..\n                                        </Subtitle>\n                                    </HeaderContainer>\n                                    <H1>first, some general info.</H1>\n                                    <H2>Set a profile image!</H2>\n                                        <ImagePickerExample setImageURI={this.setImageURI}/>\n                                    <SectionArea>\n                                        \n                                    <H2>what is your classification?</H2>\n                                    <ErrorText>{props.touched.classification && props.errors.classification }</ErrorText>\n                                    </SectionArea>\n                                    <RNPickerSelect\n                                        onValueChange={(value) => props.setFieldValue('classification', value)}\n                                        items={[\n                                            {label: 'freshman', value: 'freshman'},\n                                            {label: 'sophomore', value: 'sophomore'},\n                                            {label: 'junior', value: 'junior'},\n                                            {label: 'senior', value: 'senior'},\n                                            {label: 'super senior', value: 'super senior'},\n                                            {label: 'grad student', value: 'grad student'},\n                                        ]}\n                                        style={{inputIOS: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          },\n                                          inputAndroid: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          }, }}\n                                    />\n                                    \n                                    <SectionArea>\n                                    <H2>what is your primary major?</H2>\n                                    <ErrorText>{props.touched.major && props.errors.major }</ErrorText>\n                                    </SectionArea>\n                                    <RNPickerSelect\n                                        onValueChange={(value) => props.setFieldValue('major', value)}\n                                        items={[\n                                            {label: 'computer science', value: 'computer science'},\n                                            {label: 'computer engineering', value: 'computer engineering'},\n                                            {label: 'mathematics', value: 'mathematics'},\n                                        ]}\n                                        style={{inputIOS: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          },\n                                          inputAndroid: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          }, }}\n                                    />\n                                    \n                                    <SectionArea>      \n                                    <H2>when do u graduate?</H2>\n                                    <ErrorText>{props.touched.graddate && props.errors.graddate }</ErrorText>\n                                    </SectionArea> \n                                    <RNPickerSelect\n                                        onValueChange={(value) => props.setFieldValue('graddate', value)}\n                                        items={[\n                                            {label: 'dec 2020', value: 'dec 2020'},\n                                            {label: 'may 2021', value: 'may 2021'},\n                                            {label: 'dec 2021', value: 'dec 2021'},\n                                            {label: 'may 2022', value: 'may 2022'},\n                                            {label: 'dec 2022', value: 'dec 2022'},\n                                        ]}\n                                        style={{inputIOS: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          },\n                                          inputAndroid: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          }, }}\n                                    />\n\n                                    <H1>now tell us more about you!</H1>\n                                    <SectionArea>\n                                    <H2>your hometown?</H2>\n                                    <ErrorText>{props.touched.hometown && props.errors.hometown }</ErrorText>\n                                    </SectionArea>\n                                    \n                                    <SingleLineInput \n                                        placeholder='please tell us your hometown!' \n                                        onChangeText={props.handleChange('hometown')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.hometown}\n                                    />\n\n                                    \n                                    <SectionArea>\n                                    <H2>what is your gender identity?</H2>\n                                    <ErrorText>{props.touched.gender && props.errors.gender }</ErrorText>\n                                    </SectionArea>\n                                    <SingleLineInput \n                                        placeholder='please tell us your gender!' \n                                        onChangeText={props.handleChange('gender')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.gender}\n                                    />\n                                    \n                                    <SectionArea>\n                                    <H2>finally, a short bio</H2>\n                                    <ErrorText>{props.touched.bio && props.errors.bio }</ErrorText>\n                                    </SectionArea>\n                                    <BioInput \n                                        placeholder='please enter a short bio! (250 words max)' \n                                        onChangeText={props.handleChange('bio')} \n                                        maxLength={150}\n                                        multiline\n                                        numberOfLines={7}\n                                        value = {props.values.bio}\n                                    />\n                                    <Button title=\"Submit\" onPress={() => props.handleSubmit()}>\n                                        <ButtonText>i'm done!</ButtonText>\n                                    </Button>\n                                </FormArea>\n                            )}\n                        </Formik>\n                    \n                </CreateProfileContent>\n                </KeyboardAwareScrollView>\n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\nexport default connect(mapStateToProps, {pickTheme})(GetUserInfo);\n\n\n\n\n"]},"metadata":{},"sourceType":"script"}