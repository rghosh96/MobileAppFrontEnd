{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _util = require(\"./util\");\n\nvar _SymbolButton = _interopRequireDefault(require(\"./SymbolButton\"));\n\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/node_modules/react-native-onboarding-swiper/src/buttons/DoneButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DoneButton = function (_React$Component) {\n  (0, _inherits2.default)(DoneButton, _React$Component);\n\n  var _super = _createSuper(DoneButton);\n\n  function DoneButton() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DoneButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fadeAnim: new _reactNative.Animated.Value(0)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(DoneButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _reactNative.Animated.timing(_this2.state.fadeAnim, {\n          toValue: 1,\n          duration: 1000,\n          useNativeDriver: true\n        }).start();\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLight = _this$props.isLight,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"isLight\"]);\n      var fadeAnim = this.state.fadeAnim;\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: {\n          opacity: fadeAnim\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_SymbolButton.default, (0, _extends2.default)({\n        size: _util.BUTTON_SIZE,\n        textStyle: (0, _util.getDefaultStyle)(isLight),\n        style: {\n          borderRadius: _util.BUTTON_SIZE / 2,\n          backgroundColor: 'rgba(255, 255, 255, 0.10)',\n          margin: _util.MARGIN_RIGHT\n        }\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), \"\\u2713\"));\n    }\n  }]);\n  return DoneButton;\n}(_react.default.Component);\n\nvar _default = DoneButton;\nexports.default = _default;","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/node_modules/react-native-onboarding-swiper/src/buttons/DoneButton.js"],"names":["DoneButton","state","fadeAnim","Animated","Value","setTimeout","timing","toValue","duration","useNativeDriver","start","props","isLight","rest","opacity","BUTTON_SIZE","borderRadius","backgroundColor","margin","MARGIN_RIGHT","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;IAEMA,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,IAAIC,sBAASC,KAAb,CAAmB,CAAnB;AADJ,K;;;;;;wCAIY;AAAA;;AAClBC,MAAAA,UAAU,CAAC,YAAM;AACfF,8BAASG,MAAT,CAAgB,MAAI,CAACL,KAAL,CAAWC,QAA3B,EAAqC;AACnCK,UAAAA,OAAO,EAAE,CAD0B;AAEnCC,UAAAA,QAAQ,EAAE,IAFyB;AAGnCC,UAAAA,eAAe,EAAE;AAHkB,SAArC,EAIGC,KAJH;AAKD,OANS,EAMP,IANO,CAAV;AAOD;;;6BAEQ;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACaC,IADb;AAAA,UAECX,QAFD,GAEc,KAAKD,KAFnB,CAECC,QAFD;AAIP,aACE,6BAAC,qBAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE;AACLY,UAAAA,OAAO,EAAEZ;AADJ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,6BAAC,qBAAD;AACE,QAAA,IAAI,EAAEa,iBADR;AAEE,QAAA,SAAS,EAAE,2BAAgBH,OAAhB,CAFb;AAGE,QAAA,KAAK,EAAE;AACLI,UAAAA,YAAY,EAAED,oBAAc,CADvB;AAELE,UAAAA,eAAe,EAAE,2BAFZ;AAGLC,UAAAA,MAAM,EAAEC;AAHH;AAHT,SAQMN,IARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF;AAoBD;;;EAvCsBO,eAAMC,S;;eA0ChBrB,U","sourcesContent":["import { Animated } from 'react-native';\nimport React from 'react';\n\nimport { BUTTON_SIZE, MARGIN_RIGHT, getDefaultStyle } from './util';\nimport SymbolButton from './SymbolButton';\n\nclass DoneButton extends React.Component {\n  state = {\n    fadeAnim: new Animated.Value(0),\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      Animated.timing(this.state.fadeAnim, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true,\n      }).start();\n    }, 1000);\n  }\n\n  render() {\n    const { isLight, ...rest } = this.props;\n    const { fadeAnim } = this.state;\n\n    return (\n      <Animated.View\n        style={{\n          opacity: fadeAnim,\n        }}\n      >\n        <SymbolButton\n          size={BUTTON_SIZE}\n          textStyle={getDefaultStyle(isLight)}\n          style={{\n            borderRadius: BUTTON_SIZE / 2,\n            backgroundColor: 'rgba(255, 255, 255, 0.10)',\n            margin: MARGIN_RIGHT,\n          }}\n          {...rest}\n        >\n          âœ“\n        </SymbolButton>\n      </Animated.View>\n    );\n  }\n}\n\nexport default DoneButton;\n"]},"metadata":{},"sourceType":"script"}