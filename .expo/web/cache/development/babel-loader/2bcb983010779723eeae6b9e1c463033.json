{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/SigningUp/CreateProfile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { pickTheme } from \"../../redux/actions\";\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Subtitle, Text, HeaderContainer, HeaderText, Button, ButtonText } from \"../../theming/masterStyle\";\nimport { Rating } from 'react-native-elements';\nimport { BioInput, TextInput, CommentInput, FormArea, CreateProfileContent, RatingContainer, ErrorText, H1 } from \"../../theming/createStyle\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nvar SignUpSchema = yup.object({\n  user: yup.string().required('required!!!'),\n  password: yup.string().required('required!!!')\n});\n\nvar CreateProfile = function (_Component) {\n  _inherits(CreateProfile, _Component);\n\n  var _super = _createSuper(CreateProfile);\n\n  function CreateProfile() {\n    var _this;\n\n    _classCallCheck(this, CreateProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      bio: '',\n      fashionRating: 0,\n      foodRating: 0,\n      gameRating: 0,\n      outRating: 0,\n      readRating: 0\n    };\n    return _this;\n  }\n\n  _createClass(CreateProfile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(CreateProfileContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(Formik, {\n        initialValues: {\n          bio: '',\n          gender: '',\n          fashionComment: '',\n          foodComment: '',\n          gamingComment: '',\n          outdoorComment: '',\n          readingComment: ''\n        },\n        onSubmit: function onSubmit(values) {\n          console.log(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, function (props) {\n        return React.createElement(FormArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }\n        }, React.createElement(HeaderContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }\n        }, React.createElement(HeaderText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }\n        }, \"real quick..\"), React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 41\n          }\n        }, \"tell us a bit about yourself! create your profile.\")), React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }\n        }, \"tell us a little bit about yourself.\"), React.createElement(BioInput, {\n          placeholder: \"please enter a short bio! (250 words max)\",\n          onChangeText: props.handleChange('bio'),\n          maxLength: 150,\n          multiline: true,\n          numberOfLines: 7,\n          value: props.values.bio,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }\n        }), React.createElement(ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }\n        }, props.touched.bio && props.errors.bio), React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }\n        }, \"what is your gender identity?\"), React.createElement(TextInput, {\n          placeholder: \"please tell us your gender!\",\n          onChangeText: props.handleChange('gender'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.gender,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }\n        }), React.createElement(ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }\n        }, props.touched.gender && props.errors.gender), React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }\n        }, \"now let's talk about your interests.\"), React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }\n        }, \"use your finger to slide over the following areas to rate them! you may add any additional comments about the interest area, but it is optional.\"), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }\n        }, React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 37\n          }\n        }, \"fashion (\", _this2.state.fashionRating, \"/5)\\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 15,\n          fractions: 1,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              fashionRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"comments about fashion...\",\n          onChangeText: props.handleChange('fashionComment'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.fashionComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }\n        }, React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 37\n          }\n        }, \"food (\", _this2.state.foodRating, \"/5) \\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 15,\n          fractions: 1,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              foodRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"comments about food...\",\n          onChangeText: props.handleChange('foodComment'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.foodComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }\n        }, React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }\n        }, \"gaming (\", _this2.state.gameRating, \"/5)\\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 15,\n          fractions: 1,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              gameRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"comments about gaming...\",\n          onChangeText: props.handleChange('gamingComment'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.gamingComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 37\n          }\n        }, React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }\n        }, \"outdoors \\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 15,\n          fractions: 1,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              outRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"comments about the outdoors...\",\n          onChangeText: props.handleChange('outdoorComment'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.outdoorComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 37\n          }\n        }, React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 37\n          }\n        }, \"reading \\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 15,\n          fractions: 1,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              readRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"comments about reading...\",\n          onChangeText: props.handleChange('readingComment'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.readingComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 37\n          }\n        }), React.createElement(Button, {\n          title: \"Submit\",\n          onPress: function onPress() {\n            return props.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 37\n          }\n        }, React.createElement(ButtonText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 41\n          }\n        }, \"i'm done!\")));\n      })));\n    }\n  }]);\n\n  return CreateProfile;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps, {\n  pickTheme: pickTheme\n})(CreateProfile);","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/SigningUp/CreateProfile.js"],"names":["React","Component","pickTheme","connect","ThemeProvider","Subtitle","Text","HeaderContainer","HeaderText","Button","ButtonText","Rating","BioInput","TextInput","CommentInput","FormArea","CreateProfileContent","RatingContainer","ErrorText","H1","Formik","yup","SignUpSchema","object","user","string","required","password","CreateProfile","state","bio","fashionRating","foodRating","gameRating","outRating","readRating","console","log","props","theme","gender","fashionComment","foodComment","gamingComment","outdoorComment","readingComment","values","handleChange","touched","errors","rating","setState","handleSubmit","mapStateToProps","themeReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { pickTheme } from '../../redux/actions'\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Subtitle, Text, HeaderContainer, HeaderText, Button, ButtonText } from '../../theming/masterStyle'\nimport { Rating } from 'react-native-elements';\nimport { BioInput, TextInput, CommentInput, FormArea, CreateProfileContent, RatingContainer, ErrorText, H1 } from '../../theming/createStyle'\nimport { Formik } from 'formik'\nimport * as yup from 'yup';\n\n\n// TO DO: ASK FOR INTERESTS FIRST\n// THEN EXTRA BIO GENDER HOMETOWN ETC \n// form validation\nconst SignUpSchema = yup.object({\n    user: yup.string().required('required!!!'),\n    password: yup.string().required('required!!!')\n})\n\nclass CreateProfile extends Component {\n    state = {\n        bio: '',\n        fashionRating: 0,\n        foodRating: 0,\n        gameRating: 0,\n        outRating: 0,\n        readRating: 0\n      }\n\n  render() {\n      console.log(this.state)\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            \n            <CreateProfileContent>   \n                        <Formik \n                            initialValues={{ \n                                bio: '', \n                                gender: '', \n                                fashionComment: '',\n                                foodComment: '',\n                                gamingComment: '',\n                                outdoorComment: '',\n                                readingComment: '' }}\n                            // validationSchema={SignUpSchema}\n                            onSubmit={(values) => {\n                                console.log(values)\n                            }}\n                        >\n                            {/* get access to props of Formik */}\n                            {(props) => (\n                                <FormArea>\n                                    <HeaderContainer>\n                                        <HeaderText>real quick..</HeaderText>\n                                        <Subtitle>tell us a bit about yourself! create your profile.\n                                        </Subtitle>\n                                    </HeaderContainer>\n                                    <H1>tell us a little bit about yourself.\n                                    </H1>\n                                    <BioInput \n                                        placeholder='please enter a short bio! (250 words max)' \n                                        onChangeText={props.handleChange('bio')} \n                                        maxLength={150}\n                                        multiline\n                                        numberOfLines={7}\n                                        value = {props.values.bio}\n                                    />\n                                    <ErrorText>{props.touched.bio && props.errors.bio }</ErrorText>\n\n                                    <H1>what is your gender identity?</H1>\n                                    <TextInput \n                                        placeholder='please tell us your gender!' \n                                        onChangeText={props.handleChange('gender')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.gender}\n                                    />\n                                    <ErrorText>{props.touched.gender && props.errors.gender }</ErrorText>\n                                    \n                                    <H1>now let's talk about your interests.</H1>\n                                    <Subtitle>use your finger to slide over the following areas to rate\n                                        them! you may add any additional comments about the interest area, but it is optional.\n                                    </Subtitle>\n                                    <RatingContainer>\n                                    <Subtitle>fashion ({this.state.fashionRating}/5)&nbsp;</Subtitle>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={15}\n                                            fractions={1}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({fashionRating: rating})}\n                                    />         \n                                    </RatingContainer>\n                                    <CommentInput \n                                        placeholder='comments about fashion...' \n                                        onChangeText={props.handleChange('fashionComment')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.fashionComment}\n                                    />\n                                    <RatingContainer>\n                                    <Subtitle>food ({this.state.foodRating}/5) &nbsp;</Subtitle>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={15}\n                                            fractions={1}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({foodRating: rating})}\n                                    />   \n                                    </RatingContainer>\n                                    <CommentInput \n                                        placeholder='comments about food...' \n                                        onChangeText={props.handleChange('foodComment')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.foodComment}\n                                    />\n                                    <RatingContainer>\n                                    <Subtitle>gaming ({this.state.gameRating}/5)&nbsp;</Subtitle>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={15}\n                                            fractions={1}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({gameRating: rating})}\n                                    />   \n                                    </RatingContainer>\n                                    <CommentInput \n                                        placeholder='comments about gaming...' \n                                        onChangeText={props.handleChange('gamingComment')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.gamingComment}\n                                    />\n                                    <RatingContainer>\n                                    <Subtitle>outdoors &nbsp;</Subtitle>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={15}\n                                            fractions={1}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({outRating: rating})}\n                                    />    \n                                    </RatingContainer>\n                                    <CommentInput \n                                        placeholder='comments about the outdoors...' \n                                        onChangeText={props.handleChange('outdoorComment')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.outdoorComment}\n                                    />\n                                    <RatingContainer>\n                                    <Subtitle>reading &nbsp;</Subtitle>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={15}\n                                            fractions={1}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({readRating: rating})}\n                                    />    \n                                    </RatingContainer>   \n                                    <CommentInput \n                                        placeholder='comments about reading...' \n                                        onChangeText={props.handleChange('readingComment')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.readingComment}\n                                    />     \n\n                                    \n                                    <Button title=\"Submit\" onPress={() => props.handleSubmit()}>\n                                        <ButtonText>i'm done!</ButtonText>\n                                    </Button>\n                                </FormArea>\n                            )}\n                        </Formik>\n                    \n                </CreateProfileContent>\n\n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\nexport default connect(mapStateToProps, {pickTheme})(CreateProfile);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}