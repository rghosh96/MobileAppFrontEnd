{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/FirstLaunch.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { pickTheme } from \"../redux/actions\";\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Container, HeaderContainer, HeaderText, Text } from \"../theming/masterStyle\";\nimport { Button, ButtonText } from \"../theming/settingsStyle\";\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Onboarding from 'react-native-onboarding-swiper';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  logo: {\n    width: 66,\n    height: 58\n  }\n});\n\nvar FirstLaunch = function (_Component) {\n  _inherits(FirstLaunch, _Component);\n\n  var _super = _createSuper(FirstLaunch);\n\n  function FirstLaunch() {\n    var _this;\n\n    _classCallCheck(this, FirstLaunch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(FirstLaunch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                header: require(\"../assets/fonts/ArchivoBlack-Regular.ttf\"),\n                text: require(\"../assets/fonts/Spartan-Medium.ttf\")\n              }));\n\n            case 3:\n              this.setState({\n                loaded: true\n              });\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error loading fonts\");\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.theme);\n\n      if (!this.state.loaded) {\n        return React.createElement(AppLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }\n        });\n      }\n\n      var primary = this.props.theme.PRIMARY_COLOR;\n      var bg = this.props.theme.BG_COLOR;\n      return React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, React.createElement(Onboarding, {\n        onSkip: function onSkip() {\n          return _this2.props.navigation.replace(\"SignUp\");\n        },\n        onDone: function onDone() {\n          return _this2.props.navigation.navigate(\"SignUp\");\n        },\n        pages: [{\n          backgroundColor: primary,\n          image: React.createElement(Image, {\n            style: styles.logo,\n            source: require(\"../mockData/pic1.jpg\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 28\n            }\n          }),\n          title: 'Onboarding',\n          subtitle: 'Done with React Native Onboarding Swiper'\n        }, {\n          backgroundColor: bg,\n          image: React.createElement(Image, {\n            style: styles.logo,\n            source: require(\"../mockData/pic1.jpg\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 28\n            }\n          }),\n          title: 'Onboarding',\n          subtitle: 'Done with React Native Onboarding Swiper'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return FirstLaunch;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps, {\n  pickTheme: pickTheme\n})(FirstLaunch);","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/FirstLaunch.js"],"names":["React","Component","pickTheme","connect","ThemeProvider","Container","HeaderContainer","HeaderText","Text","Button","ButtonText","Font","AppLoading","Onboarding","styles","StyleSheet","create","container","paddingTop","tinyLogo","width","height","logo","FirstLaunch","state","loaded","loadAsync","header","require","text","setState","console","log","props","theme","primary","PRIMARY_COLOR","bg","BG_COLOR","navigation","replace","navigate","backgroundColor","image","title","subtitle","mapStateToProps","themeReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { pickTheme } from '../redux/actions'\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Container, HeaderContainer, HeaderText, Text } from '../theming/masterStyle'\nimport { Button, ButtonText} from '../theming/settingsStyle'\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Onboarding from 'react-native-onboarding-swiper'\nimport { Image, StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    container: {\n      paddingTop: 50,\n    },\n    tinyLogo: {\n      width: 50,\n      height: 50,\n    },\n    logo: {\n      width: 66,\n      height: 58,\n    },\n  });\n\nclass FirstLaunch extends Component {\n    state = {\n        loaded: false,\n      }\n      // load fonts\n      async componentDidMount() {\n        try {\n          await Font.loadAsync({\n            header: require('../assets/fonts/ArchivoBlack-Regular.ttf'),\n            text: require('../assets/fonts/Spartan-Medium.ttf')\n        })\n        this.setState({ loaded: true })\n        } catch(e){\n          console.log(\"error loading fonts\")\n        }\n      }\n      render() {\n        console.log(this.props.theme)\n        if (!this.state.loaded) {\n          return <AppLoading />\n        }\n        const primary = this.props.theme.PRIMARY_COLOR;\n        const bg = this.props.theme.BG_COLOR;\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            <Onboarding\n                onSkip={() => this.props.navigation.replace(\"SignUp\")}\n                onDone={() => this.props.navigation.navigate(\"SignUp\")}\n                pages={[\n                    {\n                    backgroundColor: primary,\n                    image: <Image style={styles.logo} source={require('../mockData/pic1.jpg')} />,\n                    title: 'Onboarding',\n                    subtitle: 'Done with React Native Onboarding Swiper',\n                    },\n                    {\n                    backgroundColor: bg,\n                    image: <Image style={styles.logo} source={require('../mockData/pic1.jpg')} />,\n                    title: 'Onboarding',\n                    subtitle: 'Done with React Native Onboarding Swiper',\n                    },\n                ]}\n            />\n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\nexport default connect(mapStateToProps, {pickTheme})(FirstLaunch);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}