{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/SigningUp/GetUserInterests.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { pickTheme } from \"../../redux/actions\";\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Subtitle, Divider, HeaderContainer, HeaderText, Button, ButtonText } from \"../../theming/masterStyle\";\nimport { Rating } from 'react-native-elements';\nimport { CommentInput, FormArea, CreateProfileContent, RatingContainer, ErrorText, H1 } from \"../../theming/createStyle\";\nimport { Formik } from 'formik';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar GetUserInterests = function (_Component) {\n  _inherits(GetUserInterests, _Component);\n\n  var _super = _createSuper(GetUserInterests);\n\n  function GetUserInterests() {\n    var _this;\n\n    _classCallCheck(this, GetUserInterests);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fashionRating: null,\n      foodRating: null,\n      gameRating: null,\n      outRating: null,\n      readRating: null,\n      fashionComment: '',\n      foodComment: '',\n      gamingComment: '',\n      outdoorsComment: '',\n      readingComment: ''\n    };\n    return _this;\n  }\n\n  _createClass(GetUserInterests, [{\n    key: \"setInterests\",\n    value: function setInterests(info) {\n      if (this.state.fashionRating === null || this.state.gameRating === null || this.state.foodRating === null || this.state.outRating === null || this.state.readRating === null) {\n        Alert.alert(\"You're missing a rating!\", \"please make sure you provided a rating for everything! ),:\", [{\n          text: \"oops let me fix that..\",\n          onPress: function onPress() {\n            return console.log(\"okay pressed\");\n          }\n        }], {\n          cancelable: false\n        });\n      } else {\n        this.setState({\n          fashionComment: info.fashion,\n          foodComment: info.food,\n          gamingComment: info.gaming,\n          outdoorsComment: info.outdoors,\n          readingComment: info.reading\n        });\n        console.log(this.state);\n        this.props.navigation.navigate(\"GetUserInfo\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        style: {\n          backgroundColor: this.props.theme.BG_COLOR\n        },\n        resetScrollToCoords: {\n          x: 0,\n          y: 0\n        },\n        scrollEnabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, React.createElement(CreateProfileContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(Formik, {\n        initialValues: {\n          fashion: '',\n          food: '',\n          gaming: '',\n          outdoors: '',\n          reading: ''\n        },\n        onSubmit: function onSubmit(values) {\n          console.log(values);\n\n          _this2.setInterests(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, function (props) {\n        return React.createElement(FormArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }\n        }, React.createElement(HeaderContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }\n        }, React.createElement(HeaderText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 41\n          }\n        }, \"real quick..\"), React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 41\n          }\n        }, \"tell us a bit about your interests! use your finger to slide to rate each of the areas, and leave an optional comment!\")), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }\n        }, React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }\n        }, \"fashion (\", _this2.state.fashionRating, \"/5)\\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 25,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              fashionRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"maybe some trends, designers, if you like hair, nails, etc..\",\n          onChangeText: props.handleChange('fashion'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.fashionComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 37\n          }\n        }, React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }\n        }, \"food (\", _this2.state.foodRating, \"/5) \\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 25,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              foodRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"what are your favorite cuisines? restaurants?\",\n          onChangeText: props.handleChange('food'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.foodComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }\n        }, React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }\n        }, \"gaming (\", _this2.state.gameRating, \"/5)\\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 25,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              gameRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"what kind of games u playin (your fav console, etc)\",\n          onChangeText: props.handleChange('gaming'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.gamingComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 37\n          }\n        }, React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }\n        }, \"outdoors (\", _this2.state.outRating, \"/5)\\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 25,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              outRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"hiking? biking? running? camping? fav trails?\",\n          onChangeText: props.handleChange('outdoor'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.outdoorComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }\n        }), React.createElement(RatingContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 37\n          }\n        }, React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 37\n          }\n        }, \"reading (\", _this2.state.readRating, \"/5)\\xA0\"), React.createElement(Rating, {\n          type: \"heart\",\n          ratingCount: 5,\n          imageSize: 25,\n          startingValue: 0,\n          onFinishRating: function onFinishRating(rating) {\n            return _this2.setState({\n              readRating: rating\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 37\n          }\n        })), React.createElement(CommentInput, {\n          placeholder: \"whether it be productivity, fiction, or your algorithms textbook, give us ur fav titles!\",\n          onChangeText: props.handleChange('reading'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.readingComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }\n        }), React.createElement(Button, {\n          title: \"Submit\",\n          onPress: function onPress() {\n            return props.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 37\n          }\n        }, React.createElement(ButtonText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 41\n          }\n        }, \"i'm done!\")));\n      }))));\n    }\n  }]);\n\n  return GetUserInterests;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps, {\n  pickTheme: pickTheme\n})(GetUserInterests);","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/SigningUp/GetUserInterests.js"],"names":["React","Component","pickTheme","connect","ThemeProvider","Subtitle","Divider","HeaderContainer","HeaderText","Button","ButtonText","Rating","CommentInput","FormArea","CreateProfileContent","RatingContainer","ErrorText","H1","Formik","KeyboardAwareScrollView","GetUserInterests","state","fashionRating","foodRating","gameRating","outRating","readRating","fashionComment","foodComment","gamingComment","outdoorsComment","readingComment","info","Alert","alert","text","onPress","console","log","cancelable","setState","fashion","food","gaming","outdoors","reading","props","navigation","navigate","theme","backgroundColor","BG_COLOR","x","y","values","setInterests","rating","handleChange","outdoorComment","handleSubmit","mapStateToProps","themeReducer"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,eAA5B,EAA6CC,UAA7C,EAAyDC,MAAzD,EAAiEC,UAAjE;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,oBAAjC,EAAuDC,eAAvD,EAAwEC,SAAxE,EAAmFC,EAAnF;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,uBAAT,QAAwC,yCAAxC;;;IAKMC,gB;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,aAAa,EAAE,IADX;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,UAAU,EAAE,IAHR;AAIJC,MAAAA,SAAS,EAAE,IAJP;AAKJC,MAAAA,UAAU,EAAE,IALR;AAMJC,MAAAA,cAAc,EAAE,EANZ;AAOJC,MAAAA,WAAW,EAAE,EAPT;AAQJC,MAAAA,aAAa,EAAE,EARX;AASJC,MAAAA,eAAe,EAAE,EATb;AAUJC,MAAAA,cAAc,EAAE;AAVZ,K;;;;;;iCAcOC,I,EAAM;AACjB,UAAI,KAAKX,KAAL,CAAWC,aAAX,KAA6B,IAA7B,IAAqC,KAAKD,KAAL,CAAWG,UAAX,KAA0B,IAA/D,IAAuE,KAAKH,KAAL,CAAWE,UAAX,KAA0B,IAAjG,IACG,KAAKF,KAAL,CAAWI,SAAX,KAAyB,IAD5B,IACoC,KAAKJ,KAAL,CAAWK,UAAX,KAA0B,IADlE,EACwE;AACpEO,QAAAA,KAAK,CAACC,KAAN,CACI,0BADJ,EAEI,4DAFJ,EAGI,CACE;AAAEC,UAAAA,IAAI,EAAE,wBAAR;AAAkCC,UAAAA,OAAO,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA;AAA3C,SADF,CAHJ,EAMI;AAAEC,UAAAA,UAAU,EAAE;AAAd,SANJ;AAQH,OAVD,MAWK;AACD,aAAKC,QAAL,CAAc;AACVb,UAAAA,cAAc,EAAEK,IAAI,CAACS,OADX;AAEVb,UAAAA,WAAW,EAAEI,IAAI,CAACU,IAFR;AAGVb,UAAAA,aAAa,EAAEG,IAAI,CAACW,MAHV;AAIVb,UAAAA,eAAe,EAAEE,IAAI,CAACY,QAJZ;AAKVb,UAAAA,cAAc,EAAEC,IAAI,CAACa;AALX,SAAd;AAOER,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACA,aAAKyB,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;AACL;AACF;;;6BAEI;AAAA;;AACLX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACF,aACI,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAG,KAAKyB,KAAL,CAAWG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,uBAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWG,KAAX,CAAiBE;AAApC,SADX;AAEI,QAAA,mBAAmB,EAAE;AAAEC,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE;AAAX,SAFzB;AAGI,QAAA,aAAa,EAAE,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKA,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACgB,QAAA,aAAa,EAAE;AACXZ,UAAAA,OAAO,EAAE,EADE;AAEXC,UAAAA,IAAI,EAAE,EAFK;AAGXC,UAAAA,MAAM,EAAE,EAHG;AAIXC,UAAAA,QAAQ,EAAE,EAJC;AAKXC,UAAAA,OAAO,EAAE;AALE,SAD/B;AAQgB,QAAA,QAAQ,EAAE,kBAACS,MAAD,EAAY;AAClBjB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;;AACA,UAAA,MAAI,CAACC,YAAL,CAAkBD,MAAlB;AACH,SAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAciB,UAACR,KAAD;AAAA,eACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIAFJ,CADJ,EAOI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,EAQI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAc,MAAI,CAACzB,KAAL,CAAWC,aAAzB,YADA,EAEA,oBAAC,MAAD;AACQ,UAAA,IAAI,EAAC,OADb;AAEQ,UAAA,WAAW,EAAE,CAFrB;AAGQ,UAAA,SAAS,EAAE,EAHnB;AAIQ,UAAA,aAAa,EAAE,CAJvB;AAKQ,UAAA,cAAc,EAAE,wBAAAkC,MAAM;AAAA,mBAAI,MAAI,CAAChB,QAAL,CAAc;AAAClB,cAAAA,aAAa,EAAEkC;AAAhB,aAAd,CAAJ;AAAA,WAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CARJ,EAkBI,oBAAC,YAAD;AACI,UAAA,WAAW,EAAC,8DADhB;AAEI,UAAA,YAAY,EAAEV,KAAK,CAACW,YAAN,CAAmB,SAAnB,CAFlB;AAGI,UAAA,SAAS,EAAE,EAHf;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAIX,KAAK,CAACQ,MAAN,CAAa3B,cAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAlBJ,EAyBI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAW,MAAI,CAACN,KAAL,CAAWE,UAAtB,aADA,EAEA,oBAAC,MAAD;AACQ,UAAA,IAAI,EAAC,OADb;AAEQ,UAAA,WAAW,EAAE,CAFrB;AAGQ,UAAA,SAAS,EAAE,EAHnB;AAIQ,UAAA,aAAa,EAAE,CAJvB;AAKQ,UAAA,cAAc,EAAE,wBAAAiC,MAAM;AAAA,mBAAI,MAAI,CAAChB,QAAL,CAAc;AAACjB,cAAAA,UAAU,EAAEiC;AAAb,aAAd,CAAJ;AAAA,WAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CAzBJ,EAmCI,oBAAC,YAAD;AACI,UAAA,WAAW,EAAC,+CADhB;AAEI,UAAA,YAAY,EAAEV,KAAK,CAACW,YAAN,CAAmB,MAAnB,CAFlB;AAGI,UAAA,SAAS,EAAE,EAHf;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAIX,KAAK,CAACQ,MAAN,CAAa1B,WAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnCJ,EA0CI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAa,MAAI,CAACP,KAAL,CAAWG,UAAxB,YADA,EAEA,oBAAC,MAAD;AACQ,UAAA,IAAI,EAAC,OADb;AAEQ,UAAA,WAAW,EAAE,CAFrB;AAGQ,UAAA,SAAS,EAAE,EAHnB;AAIQ,UAAA,aAAa,EAAE,CAJvB;AAKQ,UAAA,cAAc,EAAE,wBAAAgC,MAAM;AAAA,mBAAI,MAAI,CAAChB,QAAL,CAAc;AAAChB,cAAAA,UAAU,EAAEgC;AAAb,aAAd,CAAJ;AAAA,WAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CA1CJ,EAoDI,oBAAC,YAAD;AACI,UAAA,WAAW,EAAC,qDADhB;AAEI,UAAA,YAAY,EAAEV,KAAK,CAACW,YAAN,CAAmB,QAAnB,CAFlB;AAGI,UAAA,SAAS,EAAE,EAHf;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAIX,KAAK,CAACQ,MAAN,CAAazB,aAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApDJ,EA2DI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAe,MAAI,CAACR,KAAL,CAAWI,SAA1B,YADA,EAEA,oBAAC,MAAD;AACQ,UAAA,IAAI,EAAC,OADb;AAEQ,UAAA,WAAW,EAAE,CAFrB;AAGQ,UAAA,SAAS,EAAE,EAHnB;AAIQ,UAAA,aAAa,EAAE,CAJvB;AAKQ,UAAA,cAAc,EAAE,wBAAA+B,MAAM;AAAA,mBAAI,MAAI,CAAChB,QAAL,CAAc;AAACf,cAAAA,SAAS,EAAE+B;AAAZ,aAAd,CAAJ;AAAA,WAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CA3DJ,EAqEI,oBAAC,YAAD;AACI,UAAA,WAAW,EAAC,+CADhB;AAEI,UAAA,YAAY,EAAEV,KAAK,CAACW,YAAN,CAAmB,SAAnB,CAFlB;AAGI,UAAA,SAAS,EAAE,EAHf;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAIX,KAAK,CAACQ,MAAN,CAAaI,cAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArEJ,EA4EI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAc,MAAI,CAACrC,KAAL,CAAWK,UAAzB,YADA,EAEA,oBAAC,MAAD;AACQ,UAAA,IAAI,EAAC,OADb;AAEQ,UAAA,WAAW,EAAE,CAFrB;AAGQ,UAAA,SAAS,EAAE,EAHnB;AAIQ,UAAA,aAAa,EAAE,CAJvB;AAKQ,UAAA,cAAc,EAAE,wBAAA8B,MAAM;AAAA,mBAAI,MAAI,CAAChB,QAAL,CAAc;AAACd,cAAAA,UAAU,EAAE8B;AAAb,aAAd,CAAJ;AAAA,WAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CA5EJ,EAsFI,oBAAC,YAAD;AACI,UAAA,WAAW,EAAC,0FADhB;AAEI,UAAA,YAAY,EAAEV,KAAK,CAACW,YAAN,CAAmB,SAAnB,CAFlB;AAGI,UAAA,SAAS,EAAE,EAHf;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAIX,KAAK,CAACQ,MAAN,CAAavB,cAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtFJ,EA8FI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,OAAO,EAAE;AAAA,mBAAMe,KAAK,CAACa,YAAN,EAAN;AAAA,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CA9FJ,CADH;AAAA,OAdjB,CADA,CALA,CADJ,CADJ;AAgID;;;;EA1K4B1D,S;;AA6K/B,SAAS2D,eAAT,CAAyBvC,KAAzB,EAAgC;AAC5B,SAAO;AACH4B,IAAAA,KAAK,EAAE5B,KAAK,CAACwC,YAAN,CAAmBZ;AADvB,GAAP;AAGH;;AAED,eAAe9C,OAAO,CAACyD,eAAD,EAAkB;AAAC1D,EAAAA,SAAS,EAATA;AAAD,CAAlB,CAAP,CAAsCkB,gBAAtC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { pickTheme } from '../../redux/actions'\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Subtitle, Divider, HeaderContainer, HeaderText, Button, ButtonText } from '../../theming/masterStyle'\nimport { Rating } from 'react-native-elements';\nimport { CommentInput, FormArea, CreateProfileContent, RatingContainer, ErrorText, H1 } from '../../theming/createStyle'\nimport { Formik } from 'formik'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport { Alert } from \"react-native\";\n\n\n\nclass GetUserInterests extends Component {\n    state = {\n        fashionRating: null,\n        foodRating: null,\n        gameRating: null,\n        outRating: null,\n        readRating: null,\n        fashionComment: '',\n        foodComment: '',\n        gamingComment: '',\n        outdoorsComment: '',\n        readingComment: '',\n      }\n      \n\n      setInterests(info) {\n        if (this.state.fashionRating === null || this.state.gameRating === null || this.state.foodRating === null\n            || this.state.outRating === null || this.state.readRating === null ){\n            Alert.alert(\n                \"You're missing a rating!\",\n                \"please make sure you provided a rating for everything! ),:\",\n                [\n                  { text: \"oops let me fix that..\", onPress: () => console.log(\"okay pressed\") }\n                ],\n                { cancelable: false }\n              );\n        }\n        else {\n            this.setState({\n                fashionComment: info.fashion,\n                foodComment: info.food,\n                gamingComment: info.gaming,\n                outdoorsComment: info.outdoors,\n                readingComment: info.reading,\n              })\n              console.log(this.state)\n              this.props.navigation.navigate(\"GetUserInfo\");\n        }\n      }\n\n  render() {\n      console.log(this.state)\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            <KeyboardAwareScrollView\n                style={{ backgroundColor: this.props.theme.BG_COLOR }}\n                resetScrollToCoords={{ x: 0, y: 0 }}\n                scrollEnabled={true}\n                >\n            <CreateProfileContent>   \n            <Formik \n                            initialValues={{ \n                                fashion: '', \n                                food: '',\n                                gaming: '',\n                                outdoors: '',\n                                reading: ''}}\n                            // validationSchema={SignUpSchema}\n                            onSubmit={(values) => {\n                                console.log(values)\n                                this.setInterests(values);\n                            }}\n                        >\n                            {/* get access to props of Formik */}\n                            {(props) => (\n                                <FormArea>\n                                    <HeaderContainer>\n                                        <HeaderText>real quick..</HeaderText>\n                                        <Subtitle>tell us a bit about your interests! use your finger to slide\n                                            to rate each of the areas, and leave an optional comment!\n                                        </Subtitle>\n                                    </HeaderContainer>\n                                    <Divider/>\n                                    <RatingContainer>    \n                                    <H1>fashion ({this.state.fashionRating}/5)&nbsp;</H1>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={25}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({fashionRating: rating})}\n                                    />         \n                                    </RatingContainer>\n                                    <CommentInput \n                                        placeholder='maybe some trends, designers, if you like hair, nails, etc..' \n                                        onChangeText={props.handleChange('fashion')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.fashionComment}\n                                    />\n                                    <RatingContainer>\n                                    <H1>food ({this.state.foodRating}/5) &nbsp;</H1>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={25}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({foodRating: rating})}\n                                    />   \n                                    </RatingContainer>\n                                    <CommentInput \n                                        placeholder='what are your favorite cuisines? restaurants?' \n                                        onChangeText={props.handleChange('food')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.foodComment}\n                                    />\n                                    <RatingContainer>\n                                    <H1>gaming ({this.state.gameRating}/5)&nbsp;</H1>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={25}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({gameRating: rating})}\n                                    />   \n                                    </RatingContainer>\n                                    <CommentInput \n                                        placeholder='what kind of games u playin (your fav console, etc)' \n                                        onChangeText={props.handleChange('gaming')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.gamingComment}\n                                    />\n                                    <RatingContainer>\n                                    <H1>outdoors ({this.state.outRating}/5)&nbsp;</H1>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={25}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({outRating: rating})}\n                                    />    \n                                    </RatingContainer>\n                                    <CommentInput \n                                        placeholder='hiking? biking? running? camping? fav trails?' \n                                        onChangeText={props.handleChange('outdoor')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.outdoorComment}\n                                    />\n                                    <RatingContainer>\n                                    <H1>reading ({this.state.readRating}/5)&nbsp;</H1>\n                                    <Rating\n                                            type='heart'\n                                            ratingCount={5}\n                                            imageSize={25}\n                                            startingValue={0}\n                                            onFinishRating={rating => this.setState({readRating: rating})}\n                                    />    \n                                    </RatingContainer>   \n                                    <CommentInput \n                                        placeholder='whether it be productivity, fiction, or your algorithms textbook, give us ur fav titles!' \n                                        onChangeText={props.handleChange('reading')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.readingComment}\n                                    />     \n                                    \n                                    <Button title=\"Submit\" onPress={() => props.handleSubmit()}>\n                                        <ButtonText>i'm done!</ButtonText>\n                                    </Button>\n                                </FormArea>\n                            )}\n                        </Formik>\n                    \n                </CreateProfileContent>\n                </KeyboardAwareScrollView>\n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\nexport default connect(mapStateToProps, {pickTheme})(GetUserInterests);\n\n\n\n"]},"metadata":{},"sourceType":"module"}