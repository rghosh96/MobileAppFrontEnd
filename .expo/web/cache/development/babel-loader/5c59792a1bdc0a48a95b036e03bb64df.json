{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LightThemeModal = exports.DarkThemeModal = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _actions = require(\"../../redux/actions\");\n\nvar _themes = require(\"../../theming/themes\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _masterStyle = require(\"../../theming/masterStyle\");\n\nvar _settingStyle = require(\"../../theming/settingStyle\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Settings/ThemeModal.js\";\n\nvar DarkThemeModal = function DarkThemeModal(props) {\n  console.log(props);\n  console.log(_reactRedux.useSelector);\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var mode = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.mode;\n  });\n\n  function selectTheme(theme) {\n    console.log(\"IN SELECT THEME\");\n    console.log(theme);\n    dispatch((0, _actions.pickTheme)(theme));\n    setAsyncTheme(theme);\n  }\n\n  var setAsyncTheme = function setAsyncTheme(theme) {\n    return _regenerator.default.async(function setAsyncTheme$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(\"IN ASYNC THEME\");\n            console.log(theme);\n            _context.next = 5;\n            return _regenerator.default.awrap(_asyncStorage.default.setItem(\"theme\", JSON.stringify(theme)));\n\n          case 5:\n            console.log('Data successfully saved');\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Failed to save the data to the storage');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return _react.default.createElement(_settingStyle.ModalView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_settingStyle.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Dark Themes\"), mode === \"pink\" ? _react.default.createElement(_settingStyle.SelectedTheme, {\n    onPress: function onPress() {\n      return selectTheme(_themes.pinkTheme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }\n  }, \"Salmon Theme\") : _react.default.createElement(_settingStyle.ModalOptions, {\n    onPress: function onPress() {\n      return selectTheme(_themes.pinkTheme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Salmon Theme\"), mode === \"ruby\" ? _react.default.createElement(_settingStyle.SelectedTheme, {\n    onPress: function onPress() {\n      return selectTheme(_themes.rubyTheme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }\n  }, \"Ruby Theme\") : _react.default.createElement(_settingStyle.ModalOptions, {\n    onPress: function onPress() {\n      return selectTheme(_themes.rubyTheme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Ruby Theme\"), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      return props.closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Done\")));\n};\n\nexports.DarkThemeModal = DarkThemeModal;\n\nvar LightThemeModal = function LightThemeModal(props) {\n  console.log(props);\n  console.log(_reactRedux.useSelector);\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var mode = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.mode;\n  });\n\n  function selectTheme(theme) {\n    console.log(\"IN SELECT THEME\");\n    console.log(theme);\n    dispatch((0, _actions.pickTheme)(theme));\n    setAsyncTheme(theme);\n  }\n\n  var setAsyncTheme = function setAsyncTheme(theme) {\n    return _regenerator.default.async(function setAsyncTheme$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            console.log(\"IN ASYNC THEME\");\n            console.log(theme);\n            _context2.next = 5;\n            return _regenerator.default.awrap(_asyncStorage.default.setItem(\"theme\", JSON.stringify(theme)));\n\n          case 5:\n            console.log('Data successfully saved');\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('Failed to save the data to the storage');\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return _react.default.createElement(_settingStyle.ModalView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_settingStyle.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Light Themes\"), mode === \"olive\" ? _react.default.createElement(_settingStyle.SelectedTheme, {\n    onPress: function onPress() {\n      return selectTheme(_themes.oliveTheme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, \"Olive Theme\") : _react.default.createElement(_settingStyle.ModalOptions, {\n    onPress: function onPress() {\n      return selectTheme(_themes.oliveTheme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Olive Theme\"), mode === \"lavender\" ? _react.default.createElement(_settingStyle.SelectedTheme, {\n    onPress: function onPress() {\n      return selectTheme(_themes.lavenderTheme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 36\n    }\n  }, \"Lavender Theme\") : _react.default.createElement(_settingStyle.ModalOptions, {\n    onPress: function onPress() {\n      return selectTheme(_themes.lavenderTheme);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Lavender Theme\"), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Done\")));\n};\n\nexports.LightThemeModal = LightThemeModal;","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Settings/ThemeModal.js"],"names":["DarkThemeModal","props","console","log","useSelector","dispatch","mode","state","themeReducer","theme","selectTheme","setAsyncTheme","AsyncStorage","setItem","JSON","stringify","pinkTheme","rubyTheme","closeModal","LightThemeModal","oliveTheme","lavenderTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { pickTheme } from '../../redux/actions'\nimport { pinkTheme, lavenderTheme, oliveTheme, rubyTheme } from '../../theming/themes'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, ButtonText } from '../../theming/masterStyle'\nimport {  ModalView, SelectedTheme, Title, ModalOptions} from '../../theming/settingStyle'\nimport AsyncStorage from '@react-native-community/async-storage'\n\n  export const DarkThemeModal = (props) => {\n    console.log(props)\n    console.log(useSelector)\n    const dispatch = useDispatch()\n    const mode = useSelector(state => state.themeReducer.theme.mode);\n\n\n    function selectTheme(theme)  {\n      console.log(\"IN SELECT THEME\")\n      console.log(theme)\n      dispatch(pickTheme(theme))\n      setAsyncTheme(theme)\n    }\n\n    const setAsyncTheme = async (theme) => {\n      try {\n        console.log(\"IN ASYNC THEME\")\n      console.log(theme)\n        await AsyncStorage.setItem(\"theme\", JSON.stringify(theme))\n        console.log('Data successfully saved')\n      } catch (e) {\n        console.log('Failed to save the data to the storage')\n      }\n    }\n\n    return (\n        <ModalView>\n            <Title>Dark Themes</Title>\n            {mode === \"pink\" ? <SelectedTheme onPress={() => selectTheme(pinkTheme)}>Salmon Theme</SelectedTheme> : \n              <ModalOptions onPress={() =>selectTheme(pinkTheme)}>Salmon Theme</ModalOptions>}\n            {mode === \"ruby\" ? <SelectedTheme onPress={() => selectTheme(rubyTheme)}>Ruby Theme</SelectedTheme> : \n              <ModalOptions onPress={() =>selectTheme(rubyTheme)}>Ruby Theme</ModalOptions>}\n              <Button onPress={() => props.closeModal()} >\n                <ButtonText>Done</ButtonText>\n              </Button>   \n        </ModalView> \n    )\n    \n}\n\nexport const LightThemeModal = (props) => {\n    console.log(props)\n    console.log(useSelector)\n    const dispatch = useDispatch()\n    const mode = useSelector(state => state.themeReducer.theme.mode);\n\n    function selectTheme(theme)  {\n      console.log(\"IN SELECT THEME\")\n      console.log(theme)\n      dispatch(pickTheme(theme))\n      setAsyncTheme(theme)\n    }\n\n    const setAsyncTheme = async (theme) => {\n      try {\n        console.log(\"IN ASYNC THEME\")\n      console.log(theme)\n        await AsyncStorage.setItem(\"theme\", JSON.stringify(theme))\n        console.log('Data successfully saved')\n      } catch (e) {\n        console.log('Failed to save the data to the storage')\n      }\n    }\n\n    return (\n        <ModalView>\n            <Title>Light Themes</Title>\n            {mode === \"olive\" ? <SelectedTheme onPress={() =>selectTheme(oliveTheme)}>Olive Theme</SelectedTheme> : \n            <ModalOptions onPress={() =>selectTheme(oliveTheme)}>Olive Theme</ModalOptions>}\n            {mode === \"lavender\" ? <SelectedTheme onPress={() =>selectTheme(lavenderTheme)}>Lavender Theme</SelectedTheme> : \n            <ModalOptions onPress={() =>selectTheme(lavenderTheme)}>Lavender Theme</ModalOptions>}\n    \n            <Button onPress={() => { props.closeModal() }} >\n            <ButtonText>Done</ButtonText>\n            </Button> \n        </ModalView>\n    )\n}\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"script"}