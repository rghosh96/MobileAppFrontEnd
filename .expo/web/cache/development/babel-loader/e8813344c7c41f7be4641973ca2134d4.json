{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Dashboard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { pickTheme } from \"../redux/actions\";\nimport { connect } from 'react-redux';\nimport * as Font from 'expo-font';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Container, HeaderContainer, HeaderText, Text } from \"../theming/masterStyle\";\nimport { Connections, ProfileText, ProfileImage, ProfileContainer, ConnectionsContainer, PeopleImage, MatchesContainer, MatchesText, MatchesDash } from \"../theming/dashStyle\";\n\nvar Dashboard = function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                header: require(\"../assets/fonts/PaytoneOne-Regular.ttf\"),\n                text: require(\"../assets/fonts/Spartan-Medium.ttf\")\n              }));\n\n            case 2:\n              this.props.navigation.navigate(\"Dashboard\");\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.theme);\n      return React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, React.createElement(HeaderContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, React.createElement(HeaderText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, \"dashboard\")), React.createElement(ProfileContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(ProfileImage, {\n        source: require(\"../mockData/rashi.jpeg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }), React.createElement(ProfileText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"rashi ghosh \", \"\\n\", \"computer science \", \"\\n\", \"senior\")), React.createElement(MatchesContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, React.createElement(MatchesDash, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      }, React.createElement(MatchesText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \"top 3 matches\")), React.createElement(PeopleImage, {\n        source: require(\"../mockData/pic1.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }), React.createElement(PeopleImage, {\n        source: require(\"../mockData/pic4.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }), React.createElement(PeopleImage, {\n        source: require(\"../mockData/pic3.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      })), React.createElement(MatchesContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, React.createElement(PeopleImage, {\n        source: require(\"../mockData/pic2.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }), React.createElement(PeopleImage, {\n        source: require(\"../mockData/pic5.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }), React.createElement(PeopleImage, {\n        source: require(\"../mockData/pic6.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }), React.createElement(MatchesDash, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, React.createElement(MatchesText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"random matches\"))), React.createElement(ConnectionsContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, React.createElement(Connections, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }\n      }, \"11\"), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, \"total connections\"))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps, {\n  pickTheme: pickTheme\n})(Dashboard);","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Dashboard.js"],"names":["React","Component","pickTheme","connect","Font","ThemeProvider","Container","HeaderContainer","HeaderText","Text","Connections","ProfileText","ProfileImage","ProfileContainer","ConnectionsContainer","PeopleImage","MatchesContainer","MatchesText","MatchesDash","Dashboard","loadAsync","header","require","text","props","navigation","navigate","console","log","theme","mapStateToProps","state","themeReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { pickTheme } from '../redux/actions'\nimport { connect } from 'react-redux';\nimport * as Font from 'expo-font';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Container, HeaderContainer, HeaderText, Text } from '../theming/masterStyle'\nimport { Connections, ProfileText, ProfileImage, ProfileContainer, ConnectionsContainer, \n  PeopleImage, MatchesContainer, MatchesText, MatchesDash } from '../theming/dashStyle'\n\n\nclass Dashboard extends Component {\n  async componentDidMount() {\n    await Font.loadAsync({\n        header: require('../assets/fonts/PaytoneOne-Regular.ttf'),\n        text: require('../assets/fonts/Spartan-Medium.ttf')\n    })\n    this.props.navigation.navigate(\"Dashboard\");\n}\n  render() {\n      console.log(this.props.theme)\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            \n            <Container>\n                <HeaderContainer>\n                    <HeaderText>dashboard</HeaderText>\n                </HeaderContainer>\n                \n          \n\n                <ProfileContainer>\n                    <ProfileImage source={require('../mockData/rashi.jpeg')} />\n                    <ProfileText>\n                        rashi ghosh {\"\\n\"}\n                        computer science {\"\\n\"}\n                        senior\n                    </ProfileText>\n                </ProfileContainer>\n                \n                <MatchesContainer>\n                  <MatchesDash>\n                    <MatchesText>top 3 matches</MatchesText>\n                  </MatchesDash>\n                  <PeopleImage source={require('../mockData/pic1.jpg')} />\n                  <PeopleImage source={require('../mockData/pic4.jpg')} />\n                  <PeopleImage source={require('../mockData/pic3.jpg')} />\n                </MatchesContainer>\n\n                <MatchesContainer>\n                  <PeopleImage source={require('../mockData/pic2.jpg')} />\n                  <PeopleImage source={require('../mockData/pic5.jpg')} />\n                  <PeopleImage source={require('../mockData/pic6.jpg')} />\n                  <MatchesDash>\n                    <MatchesText>random matches</MatchesText>\n                  </MatchesDash>\n                </MatchesContainer>\n\n                <ConnectionsContainer>\n                  <Connections>11</Connections>\n                  <Text>total connections</Text>\n                </ConnectionsContainer>\n                \n                \n            </Container>\n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\nexport default connect(mapStateToProps, {pickTheme})(Dashboard);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}