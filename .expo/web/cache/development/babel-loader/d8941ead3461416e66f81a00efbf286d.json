{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Dashboard.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color:\", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding-top: 10;\\n  padding-bottom: 10;\\n  padding-left: 10;\\n  padding-right: 10;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: stretch;\\n  elevation: 1\\n  border-radius: 2;\\n  background-color:\", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    background-color: \", \";\\n    justify-content: center;\\n    align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { connect } from 'react-redux';\nimport styled, { ThemeProvider } from 'styled-components/native';\n\nvar Dashboard = function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.theme);\n      return React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, \"hello\"))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps, null)(Dashboard);\nvar Container = styled.View(_templateObject(), function (props) {\n  return props.theme.BG_COLOR;\n});\nvar Button = styled.TouchableOpacity(_templateObject2(), function (props) {\n  return props.theme.PRIMARY_COLOR;\n});\nvar Text = styled.View(_templateObject3(), function (props) {\n  return props.theme.BG_COLOR;\n});","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Dashboard.js"],"names":["React","Component","connect","styled","ThemeProvider","Dashboard","console","log","props","theme","mapStateToProps","state","themeReducer","Container","View","BG_COLOR","Button","TouchableOpacity","PRIMARY_COLOR","Text"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,0BAAtC;;IAEMC,S;;;;;;;;;;;;;6BACK;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AACF,aACI,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAG,KAAKD,KAAL,CAAWC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,CADJ,CADJ;AAUD;;;;EAbqBR,S;;AAgBxB,SAASS,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,YAAN,CAAmBH;AADvB,GAAP;AAGH;;AAMD,eAAeP,OAAO,CAACQ,eAAD,EAAkB,IAAlB,CAAP,CAA+BL,SAA/B,CAAf;AAEA,IAAMQ,SAAS,GAAGV,MAAM,CAACW,IAAV,oBAES,UAAAN,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYM,QAAhB;AAAA,CAFd,CAAf;AAOA,IAAMC,MAAM,GAAGb,MAAM,CAACc,gBAAV,qBAUS,UAAAT,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYS,aAAhB;AAAA,CAVd,CAAZ;AAaA,IAAMC,IAAI,GAAGhB,MAAM,CAACW,IAAV,qBACA,UAAAN,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYM,QAAhB;AAAA,CADL,CAAV","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, TouchableOpacity, SafeAreaView } from 'react-native';\n// import { pickTheme } from '../redux/actions'\nimport { connect } from 'react-redux';\nimport styled, { ThemeProvider } from 'styled-components/native';\n\nclass Dashboard extends Component {\n  render() {\n      console.log(this.props.theme)\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            <Container>\n                <Button>\n                    <Text>hello</Text>\n                </Button>\n            </Container>\n            \n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\n// function mapDispatchToProps {\n\n// }\n\nexport default connect(mapStateToProps, null)(Dashboard);\n\nconst Container = styled.View`\n    flex: 1;\n    background-color: ${props => props.theme.BG_COLOR};\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Button = styled.TouchableOpacity`\n  padding-top: 10;\n  padding-bottom: 10;\n  padding-left: 10;\n  padding-right: 10;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  elevation: 1\n  border-radius: 2;\n  background-color:${props => props.theme.PRIMARY_COLOR};\n`;\n\nconst Text = styled.View`\n  color:${props => props.theme.BG_COLOR};\n`;\n"]},"metadata":{},"sourceType":"module"}