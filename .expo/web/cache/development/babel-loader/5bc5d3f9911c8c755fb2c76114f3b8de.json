{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/SigningUp/GetUserInfo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { pickTheme } from \"../../redux/actions\";\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Subtitle, Text, HeaderContainer, HeaderText, Button, ButtonText } from \"../../theming/masterStyle\";\nimport { BioInput, SectionArea, SingleLineInput, FormArea, CreateProfileContent, ErrorText, H1, H2 } from \"../../theming/createStyle\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport RNPickerSelect from 'react-native-picker-select';\nvar UserInfoSchema = yup.object({\n  gender: yup.string().required('required!!!'),\n  classification: yup.string().required('required!!!'),\n  major: yup.string().required('required!!!'),\n  graddate: yup.string().required('required!!!'),\n  hometown: yup.string().required('required!!!')\n});\n\nvar GetUserInfo = function (_Component) {\n  _inherits(GetUserInfo, _Component);\n\n  var _super = _createSuper(GetUserInfo);\n\n  function GetUserInfo() {\n    var _this;\n\n    _classCallCheck(this, GetUserInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      bio: '',\n      gender: '',\n      classification: '',\n      major: '',\n      graddate: '',\n      hometown: ''\n    };\n    return _this;\n  }\n\n  _createClass(GetUserInfo, [{\n    key: \"setInfo\",\n    value: function setInfo(info) {\n      this.setState({\n        bio: info.bio,\n        gender: info.gender,\n        classification: info.classification,\n        major: info.major,\n        graddate: info.graddate,\n        hometown: info.hometown\n      });\n      console.log(this.state);\n      this.props.navigation.navigate(\"Dashboard\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        style: {\n          backgroundColor: this.props.theme.BG_COLOR\n        },\n        resetScrollToCoords: {\n          x: 0,\n          y: 0\n        },\n        scrollEnabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(CreateProfileContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(Formik, {\n        validationSchema: UserInfoSchema,\n        initialValues: {\n          bio: '',\n          gender: '',\n          classification: '',\n          major: '',\n          graddate: '',\n          hometown: ''\n        },\n        onSubmit: function onSubmit(values) {\n          _this2.setInfo(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, function (props) {\n        return React.createElement(FormArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }\n        }, React.createElement(HeaderContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }\n        }, React.createElement(HeaderText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 41\n          }\n        }, \"last step!\"), React.createElement(Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 41\n          }\n        }, \"you're almost done! just need some last tidbits ..\")), React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }\n        }, \"first, some general info.\"), React.createElement(SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }\n        }, React.createElement(H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }\n        }, \"what is your classification?\"), React.createElement(ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }\n        }, props.touched.classification && props.errors.classification)), React.createElement(RNPickerSelect, {\n          onValueChange: function onValueChange(value) {\n            return props.setFieldValue('classification', value);\n          },\n          items: [{\n            label: 'freshman',\n            value: 'freshman'\n          }, {\n            label: 'sophomore',\n            value: 'sophomore'\n          }, {\n            label: 'junior',\n            value: 'junior'\n          }, {\n            label: 'senior',\n            value: 'senior'\n          }, {\n            label: 'super senior',\n            value: 'supsen'\n          }, {\n            label: 'grad student',\n            value: 'grad'\n          }],\n          style: {\n            inputIOS: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this2.props.theme.LIGHT_GREY,\n              color: _this2.props.theme.PRIMARY_COLOR,\n              margin: 10\n            },\n            inputAndroid: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this2.props.theme.LIGHT_GREY,\n              color: _this2.props.theme.PRIMARY_COLOR,\n              margin: 10\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }\n        }), React.createElement(SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }\n        }, React.createElement(H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 37\n          }\n        }, \"what is your primary major?\"), React.createElement(ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }\n        }, props.touched.major && props.errors.major)), React.createElement(RNPickerSelect, {\n          onValueChange: function onValueChange(value) {\n            return props.setFieldValue('major', value);\n          },\n          items: [{\n            label: 'computer science',\n            value: 'cs'\n          }, {\n            label: 'computer engineering',\n            value: 'ce'\n          }, {\n            label: 'math',\n            value: 'math'\n          }],\n          style: {\n            inputIOS: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this2.props.theme.LIGHT_GREY,\n              color: _this2.props.theme.PRIMARY_COLOR,\n              margin: 10\n            },\n            inputAndroid: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this2.props.theme.LIGHT_GREY,\n              color: _this2.props.theme.PRIMARY_COLOR,\n              margin: 10\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 37\n          }\n        }), React.createElement(SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 37\n          }\n        }, React.createElement(H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 37\n          }\n        }, \"when do u graduate?\"), React.createElement(ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 37\n          }\n        }, props.touched.graddate && props.errors.graddate)), React.createElement(RNPickerSelect, {\n          onValueChange: function onValueChange(value) {\n            return props.setFieldValue('graddate', value);\n          },\n          items: [{\n            label: 'dec 2020',\n            value: 'dec20'\n          }, {\n            label: 'may 2021',\n            value: 'may21'\n          }, {\n            label: 'dec 2021',\n            value: 'dec21'\n          }, {\n            label: 'may 2022',\n            value: 'may22'\n          }, {\n            label: 'dec 2022',\n            value: 'dec22'\n          }],\n          style: {\n            inputIOS: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this2.props.theme.LIGHT_GREY,\n              color: _this2.props.theme.PRIMARY_COLOR,\n              margin: 10\n            },\n            inputAndroid: {\n              padding: 10,\n              fontWeight: 'bold',\n              borderWidth: 1,\n              borderRadius: 5,\n              borderColor: _this2.props.theme.LIGHT_GREY,\n              color: _this2.props.theme.PRIMARY_COLOR,\n              margin: 10\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }\n        }), React.createElement(H1, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 37\n          }\n        }, \"now tell us more about you!\"), React.createElement(SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 37\n          }\n        }, React.createElement(H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 37\n          }\n        }, \"your hometown?\"), React.createElement(ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 37\n          }\n        }, props.touched.hometown && props.errors.hometown)), React.createElement(SingleLineInput, {\n          placeholder: \"please tell us your hometown!\",\n          onChangeText: props.handleChange('hometown'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.hometown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 37\n          }\n        }), React.createElement(SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 37\n          }\n        }, React.createElement(H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 37\n          }\n        }, \"what is your gender identity?\"), React.createElement(ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }\n        }, props.touched.gender && props.errors.gender)), React.createElement(SingleLineInput, {\n          placeholder: \"please tell us your gender!\",\n          onChangeText: props.handleChange('gender'),\n          maxLength: 50,\n          multiline: true,\n          value: props.values.gender,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 37\n          }\n        }), React.createElement(SectionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 37\n          }\n        }, React.createElement(H2, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 37\n          }\n        }, \"finally, a short bio\"), React.createElement(ErrorText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 37\n          }\n        }, props.touched.bio && props.errors.bio)), React.createElement(BioInput, {\n          placeholder: \"please enter a short bio! (250 words max)\",\n          onChangeText: props.handleChange('bio'),\n          maxLength: 150,\n          multiline: true,\n          numberOfLines: 7,\n          value: props.values.bio,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 37\n          }\n        }), React.createElement(Button, {\n          title: \"Submit\",\n          onPress: function onPress() {\n            return props.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 37\n          }\n        }, React.createElement(ButtonText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 41\n          }\n        }, \"i'm done!\")));\n      }))));\n    }\n  }]);\n\n  return GetUserInfo;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps, {\n  pickTheme: pickTheme\n})(GetUserInfo);","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/SigningUp/GetUserInfo.js"],"names":["React","Component","pickTheme","connect","ThemeProvider","Subtitle","Text","HeaderContainer","HeaderText","Button","ButtonText","BioInput","SectionArea","SingleLineInput","FormArea","CreateProfileContent","ErrorText","H1","H2","Formik","yup","KeyboardAwareScrollView","RNPickerSelect","UserInfoSchema","object","gender","string","required","classification","major","graddate","hometown","GetUserInfo","state","bio","info","setState","console","log","props","navigation","navigate","theme","backgroundColor","BG_COLOR","x","y","values","setInfo","touched","errors","value","setFieldValue","label","inputIOS","padding","fontWeight","borderWidth","borderRadius","borderColor","LIGHT_GREY","color","PRIMARY_COLOR","margin","inputAndroid","handleChange","handleSubmit","mapStateToProps","themeReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { pickTheme } from '../../redux/actions'\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport { Subtitle, Text, HeaderContainer, HeaderText, Button, ButtonText } from '../../theming/masterStyle'\nimport { BioInput, SectionArea, SingleLineInput, FormArea, CreateProfileContent, ErrorText, H1, H2 } from '../../theming/createStyle'\nimport { Formik } from 'formik'\nimport * as yup from 'yup';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport RNPickerSelect from 'react-native-picker-select';\n\n// form validation\nconst UserInfoSchema = yup.object({\n    gender: yup.string().required('required!!!'), \n    classification: yup.string().required('required!!!'),\n    major: yup.string().required('required!!!'),\n    graddate: yup.string().required('required!!!'),\n    hometown: yup.string().required('required!!!'),\n})\n\nclass GetUserInfo extends Component {\n    state = {\n        bio: '', \n        gender: '', \n        classification: '',\n        major: '',\n        graddate: '',\n        hometown: ''\n      }\n\n      setInfo(info) {\n        this.setState({\n            bio: info.bio, \n            gender: info.gender, \n            classification: info.classification,\n            major: info.major,\n            graddate: info.graddate,\n            hometown: info.hometown\n        })\n        console.log(this.state)\n        this.props.navigation.navigate(\"Dashboard\");\n    }\n\n\n  render() {\n      console.log(this.state)\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            <KeyboardAwareScrollView\n                style={{ backgroundColor: this.props.theme.BG_COLOR }}\n                resetScrollToCoords={{ x: 0, y: 0 }}\n                scrollEnabled={true}\n                >\n            <CreateProfileContent>   \n                        <Formik \n                            validationSchema={UserInfoSchema}\n                            initialValues={{ \n                                bio: '', \n                                gender: '', \n                                classification: '',\n                                major: '',\n                                graddate: '',\n                                hometown: ''\n                            }}\n                            // validationSchema={SignUpSchema}\n                            onSubmit={(values) => {\n                                this.setInfo(values)\n                            }}\n                        >\n                            {/* get access to props of Formik */}\n                            {(props) => (\n                                <FormArea>\n                                    <HeaderContainer>\n                                        <HeaderText>last step!</HeaderText>\n                                        <Subtitle>you're almost done! just need some last tidbits ..\n                                        </Subtitle>\n                                    </HeaderContainer>\n                                    <H1>first, some general info.</H1>\n                                    <SectionArea>\n                                    <H2>what is your classification?</H2>\n                                    <ErrorText>{props.touched.classification && props.errors.classification }</ErrorText>\n                                    </SectionArea>\n                                    <RNPickerSelect\n                                        onValueChange={(value) => props.setFieldValue('classification', value)}\n                                        items={[\n                                            {label: 'freshman', value: 'freshman'},\n                                            {label: 'sophomore', value: 'sophomore'},\n                                            {label: 'junior', value: 'junior'},\n                                            {label: 'senior', value: 'senior'},\n                                            {label: 'super senior', value: 'supsen'},\n                                            {label: 'grad student', value: 'grad'},\n                                        ]}\n                                        style={{inputIOS: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          },\n                                          inputAndroid: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          }, }}\n                                    />\n                                    \n                                    <SectionArea>\n                                    <H2>what is your primary major?</H2>\n                                    <ErrorText>{props.touched.major && props.errors.major }</ErrorText>\n                                    </SectionArea>\n                                    <RNPickerSelect\n                                        onValueChange={(value) => props.setFieldValue('major', value)}\n                                        items={[\n                                            {label: 'computer science', value: 'cs'},\n                                            {label: 'computer engineering', value: 'ce'},\n                                            {label: 'math', value: 'math'},\n                                        ]}\n                                        style={{inputIOS: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          },\n                                          inputAndroid: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          }, }}\n                                    />\n                                    \n                                    <SectionArea>      \n                                    <H2>when do u graduate?</H2>\n                                    <ErrorText>{props.touched.graddate && props.errors.graddate }</ErrorText>\n                                    </SectionArea> \n                                    <RNPickerSelect\n                                        onValueChange={(value) => props.setFieldValue('graddate', value)}\n                                        items={[\n                                            {label: 'dec 2020', value: 'dec20'},\n                                            {label: 'may 2021', value: 'may21'},\n                                            {label: 'dec 2021', value: 'dec21'},\n                                            {label: 'may 2022', value: 'may22'},\n                                            {label: 'dec 2022', value: 'dec22'},\n                                        ]}\n                                        style={{inputIOS: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          },\n                                          inputAndroid: {\n                                            padding: 10,\n                                            fontWeight: 'bold',\n                                            borderWidth: 1,\n                                            borderRadius: 5,\n                                            borderColor: this.props.theme.LIGHT_GREY,\n                                            color: this.props.theme.PRIMARY_COLOR,\n                                            margin: 10\n                                          }, }}\n                                    />\n\n                                    <H1>now tell us more about you!</H1>\n                                    <SectionArea>\n                                    <H2>your hometown?</H2>\n                                    <ErrorText>{props.touched.hometown && props.errors.hometown }</ErrorText>\n                                    </SectionArea>\n                                    \n                                    <SingleLineInput \n                                        placeholder='please tell us your hometown!' \n                                        onChangeText={props.handleChange('hometown')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.hometown}\n                                    />\n                                    \n                                    <SectionArea>\n                                    <H2>what is your gender identity?</H2>\n                                    <ErrorText>{props.touched.gender && props.errors.gender }</ErrorText>\n                                    </SectionArea>\n                                    <SingleLineInput \n                                        placeholder='please tell us your gender!' \n                                        onChangeText={props.handleChange('gender')} \n                                        maxLength={50}\n                                        multiline\n                                        value = {props.values.gender}\n                                    />\n                                    \n                                    <SectionArea>\n                                    <H2>finally, a short bio</H2>\n                                    <ErrorText>{props.touched.bio && props.errors.bio }</ErrorText>\n                                    </SectionArea>\n                                    <BioInput \n                                        placeholder='please enter a short bio! (250 words max)' \n                                        onChangeText={props.handleChange('bio')} \n                                        maxLength={150}\n                                        multiline\n                                        numberOfLines={7}\n                                        value = {props.values.bio}\n                                    />\n                                    <Button title=\"Submit\" onPress={() => props.handleSubmit()}>\n                                        <ButtonText>i'm done!</ButtonText>\n                                    </Button>\n                                </FormArea>\n                            )}\n                        </Formik>\n                    \n                </CreateProfileContent>\n                </KeyboardAwareScrollView>\n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\nexport default connect(mapStateToProps, {pickTheme})(GetUserInfo);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}