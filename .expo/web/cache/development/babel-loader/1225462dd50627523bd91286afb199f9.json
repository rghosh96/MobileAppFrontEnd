{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _redux = require(\"redux\");\n\nvar _reduxThunk = _interopRequireDefault(require(\"redux-thunk\"));\n\nvar _themeReducer = _interopRequireDefault(require(\"./redux/themeReducer\"));\n\nvar _Navigation = require(\"./Navigation\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/App.js\";\nvar store = (0, _redux.createStore)((0, _redux.combineReducers)({\n  themeReducer: _themeReducer.default\n}), (0, _redux.applyMiddleware)(_reduxThunk.default));\n\nfunction App() {\n  var _React$useState = _react.default.useState(null),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isFirstLaunch = _React$useState2[0],\n      setIsFirstLaunch = _React$useState2[1];\n\n  (0, _react.useEffect)(function () {\n    _asyncStorage.default.getItem('alreadyLaunched').then(function (value) {\n      if (value == null) {\n        _asyncStorage.default.setItem('alreadyLaunched', 'true');\n\n        setIsFirstLaunch(true);\n      } else {\n        _asyncStorage.default.setItem('alreadyLaunched', 'false');\n\n        setIsFirstLaunch(false);\n      }\n    });\n  }, []);\n\n  if (isFirstLaunch === null) {\n    return null;\n  } else if (isFirstLaunch === true) {\n    return _react.default.createElement(_reactRedux.Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    }, _react.default.createElement(_Navigation.FirstNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    return _react.default.createElement(_reactRedux.Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_Navigation.Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/App.js"],"names":["store","themeReducer","thunk","App","React","useState","isFirstLaunch","setIsFirstLaunch","AsyncStorage","getItem","then","value","setItem"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,IAAMA,KAAK,GAAG,wBAAY,4BAAgB;AAACC,EAAAA,YAAY,EAAZA;AAAD,CAAhB,CAAZ,EAA6C,4BAAgBC,mBAAhB,CAA7C,CAAd;;AAIe,SAASC,GAAT,GAAe;AAAA,wBACcC,eAAMC,QAAN,CAAe,IAAf,CADd;AAAA;AAAA,MACrBC,aADqB;AAAA,MACNC,gBADM;;AAG5B,wBAAU,YAAM;AACdC,0BAAaC,OAAb,CAAqB,iBAArB,EAAwCC,IAAxC,CAA6C,UAAAC,KAAK,EAAI;AACpD,UAAIA,KAAK,IAAI,IAAb,EAAmB;AACjBH,8BAAaI,OAAb,CAAqB,iBAArB,EAAwC,MAAxC;;AACAL,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,OAHD,MAGO;AACLC,8BAAaI,OAAb,CAAqB,iBAArB,EAAwC,OAAxC;;AACAL,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,KARD;AASD,GAVD,EAUG,EAVH;;AAYA,MAAID,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAO,IAAP;AACD,GAFD,MAEO,IAAIA,aAAa,KAAK,IAAtB,EAA4B;AACjC,WAAS,6BAAC,oBAAD;AAAU,MAAA,KAAK,EAAGN,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,6BAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,CAAT;AAGD,GAJM,MAIA;AACL,WACE,6BAAC,oBAAD;AAAU,MAAA,KAAK,EAAGA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;AAEF","sourcesContent":["import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport themeReducer from './redux/themeReducer';\nimport {Navigation, FirstNav} from './Navigation'\nimport AsyncStorage from '@react-native-community/async-storage'\n\nconst store = createStore(combineReducers({themeReducer}), applyMiddleware(thunk))\n\n\n\nexport default function App() {\n  const [isFirstLaunch, setIsFirstLaunch] = React.useState(null)\n\n  useEffect(() => {\n    AsyncStorage.getItem('alreadyLaunched').then(value => {\n      if (value == null) {\n        AsyncStorage.setItem('alreadyLaunched', 'true');\n        setIsFirstLaunch(true);\n      } else {\n        AsyncStorage.setItem('alreadyLaunched', 'false');\n        setIsFirstLaunch(false);\n      }\n    })\n  }, []);\n\n  if (isFirstLaunch === null) {\n    return null;\n  } else if (isFirstLaunch === true) {\n    return ( <Provider store={ store }>\n      <FirstNav />\n    </Provider>) \n  } else {\n    return (\n      <Provider store={ store }>\n        <Navigation />\n      </Provider>\n      \n    );\n  }\n  \n}\n\n\n\n"]},"metadata":{},"sourceType":"script"}