{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProfileImageModal = exports.UserBioInputModal = exports.UserRatingModal = exports.UserDropDownModal = exports.UserInputModal = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _masterStyle = require(\"../../theming/masterStyle\");\n\nvar _settingStyle = require(\"../../theming/settingStyle\");\n\nvar _UpdateImage = _interopRequireDefault(require(\"./UpdateImage\"));\n\nvar _lottieReactNative = _interopRequireDefault(require(\"lottie-react-native\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePickerSelect = _interopRequireDefault(require(\"react-native-picker-select\"));\n\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Settings/InputModals.js\";\n\nvar UserInputModal = function UserInputModal(props) {\n  console.log(props);\n  console.log(_reactRedux.useSelector);\n  var lightGrey = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.LIGHT_GREY;\n  });\n  return _react.default.createElement(_settingStyle.ModalView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_settingStyle.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"update \", props.infoType), _react.default.createElement(_settingStyle.FormInput, {\n    placeholder: props.infoType,\n    placeholderTextColor: lightGrey,\n    onChangeText: function onChangeText(input) {\n      return props.updateState(props.infoType, input);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.updateUserDB();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Done\")), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n};\n\nexports.UserInputModal = UserInputModal;\n\nvar UserDropDownModal = function UserDropDownModal(props) {\n  console.log(props);\n  console.log(_reactRedux.useSelector);\n  var lightGrey = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.LIGHT_GREY;\n  });\n  var primary = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.PRIMARY_COLOR;\n  });\n  return _react.default.createElement(_settingStyle.ModalView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_settingStyle.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"update \", props.infoType), _react.default.createElement(_reactNativePickerSelect.default, {\n    onValueChange: function onValueChange(value) {\n      return props.updateState(props.infoType, value);\n    },\n    items: props.items,\n    style: dropdown(lightGrey, primary),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.updateUserDB();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Done\")), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n};\n\nexports.UserDropDownModal = UserDropDownModal;\n\nvar UserRatingModal = function UserRatingModal(props) {\n  console.log(props);\n  console.log(_reactRedux.useSelector);\n  var lightGrey = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.LIGHT_GREY;\n  });\n  var primary = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.PRIMARY_COLOR;\n  });\n  return _react.default.createElement(_settingStyle.ModalView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_settingStyle.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"update \", props.infoType), _react.default.createElement(_reactNativePickerSelect.default, {\n    onValueChange: function onValueChange(value) {\n      return props.updateState(props.infoType, value);\n    },\n    items: props.items,\n    style: dropdown(lightGrey, primary),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.updateUserDB();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Done\")), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n};\n\nexports.UserRatingModal = UserRatingModal;\n\nvar UserBioInputModal = function UserBioInputModal(props) {\n  console.log(props);\n  console.log(_reactRedux.useSelector);\n  var lightGrey = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.LIGHT_GREY;\n  });\n  return _react.default.createElement(_settingStyle.ModalView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_settingStyle.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"update \", props.infoType), _react.default.createElement(_settingStyle.BioInput, {\n    placeholder: props.infoType,\n    placeholderTextColor: lightGrey,\n    onChangeText: function onChangeText(input) {\n      return props.updateState(props.infoType, input);\n    },\n    maxLength: 150,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.updateUserDB();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Done\")), _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n};\n\nexports.UserBioInputModal = UserBioInputModal;\n\nvar ProfileImageModal = function ProfileImageModal(props) {\n  console.log(props);\n  console.log(_reactRedux.useSelector);\n  var lightGrey = (0, _reactRedux.useSelector)(function (state) {\n    return state.themeReducer.theme.LIGHT_GREY;\n  });\n  return _react.default.createElement(_settingStyle.ModalView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_settingStyle.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"update profile pic\"), _react.default.createElement(_UpdateImage.default, {\n    setImageURI: props.setImageURI,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), props.uploadingImage ? _react.default.createElement(_lottieReactNative.default, {\n    style: {\n      height: 65\n    },\n    source: require('../../assets/uploading.json'),\n    autoPlay: true,\n    loop: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }) : null, props.imageSet ? _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.updateUserDB();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 31\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Set New Profile Image\")) : null, _react.default.createElement(_masterStyle.Button, {\n    onPress: function onPress() {\n      props.closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_masterStyle.ButtonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n};\n\nexports.ProfileImageModal = ProfileImageModal;\n\nvar dropdown = function dropdown(lightGrey, primary) {\n  return _reactNative.StyleSheet.create({\n    inputIOS: {\n      padding: 10,\n      fontWeight: 'bold',\n      borderWidth: 1,\n      borderRadius: 5,\n      borderColor: lightGrey,\n      color: primary,\n      margin: 10\n    },\n    inputAndroid: {\n      padding: 10,\n      fontWeight: 'bold',\n      borderWidth: 1,\n      borderRadius: 5,\n      borderColor: lightGrey,\n      color: primary,\n      margin: 10\n    }\n  });\n};","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Settings/InputModals.js"],"names":["UserInputModal","props","console","log","useSelector","lightGrey","state","themeReducer","theme","LIGHT_GREY","infoType","input","updateState","updateUserDB","closeModal","UserDropDownModal","primary","PRIMARY_COLOR","value","items","dropdown","UserRatingModal","UserBioInputModal","ProfileImageModal","setImageURI","uploadingImage","height","require","imageSet","StyleSheet","create","inputIOS","padding","fontWeight","borderWidth","borderRadius","borderColor","color","margin","inputAndroid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, ButtonText } from '../../theming/masterStyle'\nimport { ModalView, Title, FormInput, BioInput } from '../../theming/settingStyle'\nimport ImagePickerExample from './UpdateImage'\nimport LottieView from 'lottie-react-native';\nimport { StyleSheet } from 'react-native'\nimport RNPickerSelect from 'react-native-picker-select';\n\n\n  export const UserInputModal = (props) => {\n    console.log(props)\n    console.log(useSelector)\n    const lightGrey = useSelector(state => state.themeReducer.theme.LIGHT_GREY);\n    return (\n        <ModalView>\n            <Title>update {props.infoType}</Title>\n            <FormInput \n                placeholder={props.infoType} \n                placeholderTextColor={lightGrey}\n                onChangeText={(input) => props.updateState(props.infoType, input)}\n            />\n            <Button onPress={() => { props.updateUserDB(); }} >\n                <ButtonText>Done</ButtonText>\n            </Button>\n            <Button onPress={() => { props.closeModal() }} >\n                <ButtonText>Cancel</ButtonText>\n            </Button>\n        </ModalView>\n    )\n}\n\nexport const UserDropDownModal = (props) => {\n    console.log(props)\n    console.log(useSelector)\n    const lightGrey = useSelector(state => state.themeReducer.theme.LIGHT_GREY);\n    const primary = useSelector(state => state.themeReducer.theme.PRIMARY_COLOR);\n    return (\n        <ModalView>\n            <Title>update {props.infoType}</Title>\n            <RNPickerSelect\n                onValueChange={(value) => props.updateState(props.infoType, value)}\n                items={props.items}\n                style={dropdown(lightGrey, primary)}\n            />\n            <Button onPress={() => { props.updateUserDB(); }} >\n                <ButtonText>Done</ButtonText>\n            </Button>\n            <Button onPress={() => { props.closeModal() }} >\n                <ButtonText>Cancel</ButtonText>\n            </Button>\n        </ModalView>\n    )\n}\n\nexport const UserRatingModal = (props) => {\n    console.log(props)\n    console.log(useSelector)\n    const lightGrey = useSelector(state => state.themeReducer.theme.LIGHT_GREY);\n    const primary = useSelector(state => state.themeReducer.theme.PRIMARY_COLOR);\n    return (\n        <ModalView>\n            <Title>update {props.infoType}</Title>\n            <RNPickerSelect\n                onValueChange={(value) => props.updateState(props.infoType, value)}\n                items={props.items}\n                style={dropdown(lightGrey, primary)}\n            />\n            <Button onPress={() => { props.updateUserDB(); }} >\n                <ButtonText>Done</ButtonText>\n            </Button>\n            <Button onPress={() => { props.closeModal() }} >\n                <ButtonText>Cancel</ButtonText>\n            </Button>\n        </ModalView>\n    )\n}\n\nexport const UserBioInputModal = (props) => {\n    console.log(props)\n    console.log(useSelector)\n    const lightGrey = useSelector(state => state.themeReducer.theme.LIGHT_GREY);\n    return (\n        <ModalView>\n            <Title>update {props.infoType}</Title>\n            <BioInput \n                placeholder={props.infoType} \n                placeholderTextColor={lightGrey}\n                onChangeText={(input) => props.updateState(props.infoType, input)}\n                maxLength={150}\n                multiline\n            />\n            <Button onPress={() => { props.updateUserDB(); }} >\n                <ButtonText>Done</ButtonText>\n            </Button>\n            <Button onPress={() => { props.closeModal() }} >\n                <ButtonText>Cancel</ButtonText>\n            </Button>\n        </ModalView>\n    )\n}\n\n\n\nexport const ProfileImageModal = (props) => {\n    console.log(props)\n    console.log(useSelector)\n    const lightGrey = useSelector(state => state.themeReducer.theme.LIGHT_GREY);\n    return (\n        <ModalView>\n            <Title>update profile pic</Title>\n            <ImagePickerExample setImageURI={props.setImageURI}/>\n            {props.uploadingImage ? <LottieView style={{height: 65}}source={require('../../assets/uploading.json')} autoPlay loop />\n            : null }\n            {props.imageSet ? <Button onPress={() => { props.updateUserDB(); }} >\n                <ButtonText>Set New Profile Image</ButtonText>\n            </Button>\n            : null }\n            \n            \n            <Button onPress={() => { props.closeModal() }} >\n                <ButtonText>Cancel</ButtonText>\n            </Button>\n        </ModalView>\n    )\n}\n\n\nconst dropdown = (lightGrey, primary) => StyleSheet.create({\n    inputIOS: {\n        padding: 10,\n        fontWeight: 'bold',\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: lightGrey,\n        color: primary,\n        margin: 10\n      },\n      inputAndroid: {\n        padding: 10,\n        fontWeight: 'bold',\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: lightGrey,\n        color: primary,\n        margin: 10\n      }\n  });\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"script"}