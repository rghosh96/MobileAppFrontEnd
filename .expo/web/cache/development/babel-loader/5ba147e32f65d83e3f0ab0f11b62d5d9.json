{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Settings.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { pickTheme } from \"../redux/actions\";\nimport { pinkTheme, lavenderTheme, oliveTheme } from \"../theming/themes\";\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport Dashboard from \"./Dashboard\";\nimport { Container, HeaderContainer, HeaderText, Text } from \"../theming/masterStyle\";\nimport { Button, ButtonText } from \"../theming/settingsStyle\";\nimport { MyStack } from \"../StackNavigator\";\n\nvar Settings = function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    _classCallCheck(this, Settings);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log(this.props.theme);\n      return React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(HeaderContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(HeaderText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, \"settings\")), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, \"pick a color theme!\"), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this.props.pickTheme(pinkTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, React.createElement(ButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }, \"pink theme\")), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this.props.pickTheme(lavenderTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, React.createElement(ButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, \"lavender theme\")), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this.props.pickTheme(oliveTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, React.createElement(ButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, \"olive theme\")), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('SignUp');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, React.createElement(ButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, \"go to Dashboard ...\"))));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nexport default connect(mapStateToProps, {\n  pickTheme: pickTheme\n})(Settings);","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Settings.js"],"names":["React","Component","pickTheme","pinkTheme","lavenderTheme","oliveTheme","connect","ThemeProvider","Dashboard","Container","HeaderContainer","HeaderText","Text","Button","ButtonText","MyStack","Settings","console","log","props","theme","navigation","navigate","mapStateToProps","state","themeReducer"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,UAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,SAAP;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,UAArC,EAAiDC,IAAjD;AACA,SAASC,MAAT,EAAiBC,UAAjB;AACA,SAAQC,OAAR;;IAGMC,Q;;;;;;;;;;;;;6BACK;AAAA;;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AACF,aACI,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAG,KAAKD,KAAL,CAAWC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJJ,EAKQ,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACD,KAAL,CAAWjB,SAAX,CAAqBC,SAArB,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CALR,EASQ,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACgB,KAAL,CAAWjB,SAAX,CAAqBE,aAArB,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CATR,EAaQ,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACe,KAAL,CAAWjB,SAAX,CAAqBG,UAArB,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAbR,EAiBQ,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACc,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CAjBR,CAFJ,CADJ;AA0BD;;;;EA7BoBrB,S;;AAgCvB,SAASsB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,YAAN,CAAmBL;AADvB,GAAP;AAGH;;AAED,eAAed,OAAO,CAACiB,eAAD,EAAkB;AAACrB,EAAAA,SAAS,EAATA;AAAD,CAAlB,CAAP,CAAsCc,QAAtC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { pickTheme } from '../redux/actions'\nimport { pinkTheme, lavenderTheme, oliveTheme } from '../theming/themes'\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport Dashboard from './Dashboard'\nimport { Container, HeaderContainer, HeaderText, Text } from '../theming/masterStyle'\nimport { Button, ButtonText} from '../theming/settingsStyle'\nimport {MyStack} from '../StackNavigator'\n\n\nclass Settings extends Component {\n  render() {\n      console.log(this.props.theme)\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            \n            <Container>\n                <HeaderContainer>\n                    <HeaderText>settings</HeaderText>\n                </HeaderContainer>\n                <Text>pick a color theme!</Text>\n                    <Button onPress={() => this.props.pickTheme(pinkTheme)}>\n                        <ButtonText>pink theme</ButtonText>\n                    </Button>\n\n                    <Button onPress={() => this.props.pickTheme(lavenderTheme)}>\n                        <ButtonText>lavender theme</ButtonText>\n                    </Button>\n\n                    <Button onPress={() => this.props.pickTheme(oliveTheme)}>\n                        <ButtonText>olive theme</ButtonText>\n                    </Button>\n                    \n                    <Button onPress={() => this.props.navigation.navigate('SignUp')}>\n                        <ButtonText>go to Dashboard ...</ButtonText>\n                    </Button>\n            </Container>\n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\nexport default connect(mapStateToProps, {pickTheme})(Settings);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}