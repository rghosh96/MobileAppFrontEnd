{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Settings.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { pickTheme } from \"../redux/actions\";\nimport { pinkTheme, lavenderTheme, oliveTheme } from \"../theming/themes\";\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { List } from 'react-native-paper';\nimport { Container, HeaderContainer, HeaderText, Button, ButtonText } from \"../theming/masterStyle\";\nimport { SettingContainer, ListItem, ModalView, ModalContainer, SelectedTheme, Line, Title, ModalOptions } from \"../theming/settingStyle\";\n\nvar Settings = function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      expanded: true,\n      modalVisible: false,\n      displayOptions: \"\"\n    };\n\n    _this.handlePress = function () {\n      _this.setState({\n        expanded: !_this.state.expanded\n      });\n    };\n\n    _this.setModalVisible = function (visible, themeOptions) {\n      _this.setState({\n        modalVisible: visible,\n        displayOptions: themeOptions\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.theme);\n      var modalVisible = this.state.modalVisible;\n      return React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, React.createElement(HeaderContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(HeaderText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"settings\")), React.createElement(SettingContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          Alert.alert(\"Modal has been closed.\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, React.createElement(ModalContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, this.state.displayOptions === \"lightTheme\" ? React.createElement(ModalView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, \"Light Themes\"), this.props.theme.mode === \"olive\" ? React.createElement(SelectedTheme, {\n        onPress: function onPress() {\n          return _this2.props.pickTheme(oliveTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 54\n        }\n      }, \"Olive Theme\") : React.createElement(ModalOptions, {\n        onPress: function onPress() {\n          return _this2.props.pickTheme(oliveTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      }, \"Olive Theme\"), this.props.theme.mode === \"lavender\" ? React.createElement(SelectedTheme, {\n        onPress: function onPress() {\n          return _this2.props.pickTheme(lavenderTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 57\n        }\n      }, \"Lavender Theme\") : React.createElement(ModalOptions, {\n        onPress: function onPress() {\n          return _this2.props.pickTheme(lavenderTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }, \"Lavender Theme\"), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setModalVisible(!modalVisible);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, React.createElement(ButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, \"Done\"))) : React.createElement(ModalView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Dark Themes\"), this.props.theme.mode === \"pink\" ? React.createElement(SelectedTheme, {\n        onPress: function onPress() {\n          return _this2.props.pickTheme(pinkTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 53\n        }\n      }, \"Pink Theme\") : React.createElement(ModalOptions, {\n        onPress: function onPress() {\n          return _this2.props.pickTheme(pinkTheme);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }, \"Pink Theme\"), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.setModalVisible(!modalVisible);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, React.createElement(ButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, \"Done\"))))), React.createElement(List.Section, {\n        style: {\n          padding: 5,\n          alignSelf: \"stretch\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(List.Accordion, {\n        title: \"Theme Options\",\n        titleStyle: {\n          color: this.props.theme.GREY,\n          fontFamily: \"text\",\n          fontSize: 19\n        },\n        theme: {\n          colors: {\n            primary: this.props.theme.PRIMARY_COLOR\n          }\n        },\n        left: function left(props) {\n          return React.createElement(List.Icon, _extends({}, props, {\n            icon: \"format-paint\",\n            color: _this2.props.theme.GREY,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 24\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, React.createElement(ListItem, {\n        onPress: function onPress() {\n          _this2.setModalVisible(true, \"lightTheme\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, \" \\u22B3 Light Themes\"), React.createElement(ListItem, {\n        onPress: function onPress() {\n          _this2.setModalVisible(true, \"darkTheme\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, \" \\u22B3 Dark Themes\")), React.createElement(Line, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }), React.createElement(List.Accordion, {\n        title: \"Account Details\",\n        titleStyle: {\n          color: this.props.theme.GREY,\n          fontFamily: \"text\",\n          fontSize: 19\n        },\n        theme: {\n          colors: {\n            primary: this.props.theme.PRIMARY_COLOR\n          }\n        },\n        left: function left(props) {\n          return React.createElement(List.Icon, _extends({}, props, {\n            icon: \"account-edit\",\n            color: _this2.props.theme.GREY,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 24\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, React.createElement(ListItem, {\n        onPress: function onPress() {\n          _this2.setModalVisible(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, \" \\u22B3 Edit Details \")), React.createElement(Line, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      })), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('SignUp');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }\n      }, React.createElement(ButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, \"go to SignUp ...\")))));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    theme: state.themeReducer.theme\n  };\n}\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default connect(mapStateToProps, {\n  pickTheme: pickTheme\n})(Settings);","map":{"version":3,"sources":["/Users/rashighosh/Desktop/MobileAppFrontEnd/components/Settings.js"],"names":["React","Component","pickTheme","pinkTheme","lavenderTheme","oliveTheme","connect","ThemeProvider","List","Container","HeaderContainer","HeaderText","Button","ButtonText","SettingContainer","ListItem","ModalView","ModalContainer","SelectedTheme","Line","Title","ModalOptions","Settings","state","expanded","modalVisible","displayOptions","handlePress","setState","setModalVisible","visible","themeOptions","console","log","props","theme","Alert","alert","mode","padding","alignSelf","color","GREY","fontFamily","fontSize","colors","primary","PRIMARY_COLOR","navigation","navigate","mapStateToProps","themeReducer","styles","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","openButton","textStyle","fontWeight","textAlign","modalText","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { pickTheme } from '../redux/actions'\nimport { pinkTheme, lavenderTheme, oliveTheme } from '../theming/themes'\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from 'styled-components/native';\nimport {\n  Alert,\n  Modal,\n  StyleSheet,\n  TouchableHighlight,\n  View\n} from \"react-native\";\nimport { List } from 'react-native-paper'\nimport { Container, HeaderContainer, HeaderText, Button, ButtonText } from '../theming/masterStyle'\nimport { SettingContainer, ListItem, ModalView, ModalContainer, SelectedTheme, Line, Title,\n  ModalOptions} from '../theming/settingStyle'\n\n\n  \n\nclass Settings extends Component {\n    state = {\n        expanded: true,\n        modalVisible: false,\n        displayOptions: \"\"\n      };\n\n      handlePress = () => {\n        this.setState({\n          expanded: !this.state.expanded\n        })\n      }\n\n      setModalVisible = (visible, themeOptions) => {\n        this.setState({ \n          modalVisible: visible,\n          displayOptions: themeOptions });\n      }\n\n\n    render() {\n        console.log(this.props.theme)\n        const { modalVisible } = this.state;\n    return (\n        <ThemeProvider theme={ this.props.theme }>\n            \n            <Container>\n                <HeaderContainer>\n                    <HeaderText>settings</HeaderText>\n                </HeaderContainer>\n                <SettingContainer>\n\n                <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n          }}\n        >\n          <ModalContainer>\n              {this.state.displayOptions === \"lightTheme\" ? \n              <ModalView>\n                <Title>Light Themes</Title>\n                {this.props.theme.mode === \"olive\" ? <SelectedTheme onPress={() => this.props.pickTheme(oliveTheme)}>Olive Theme</SelectedTheme> : \n                  <ModalOptions onPress={() => this.props.pickTheme(oliveTheme)}>Olive Theme</ModalOptions>}\n                {this.props.theme.mode === \"lavender\" ? <SelectedTheme onPress={() => this.props.pickTheme(lavenderTheme)}>Lavender Theme</SelectedTheme> : \n                  <ModalOptions onPress={() => this.props.pickTheme(lavenderTheme)}>Lavender Theme</ModalOptions>}\n                <Button onPress={() => { this.setModalVisible(!modalVisible); }} >\n                  <ButtonText>Done</ButtonText>\n                </Button>\n              </ModalView>\n                 :\n              <ModalView>\n                <Title>Dark Themes</Title>\n                {this.props.theme.mode === \"pink\" ? <SelectedTheme onPress={() => this.props.pickTheme(pinkTheme)}>Pink Theme</SelectedTheme> : \n                  <ModalOptions onPress={() => this.props.pickTheme(pinkTheme)}>Pink Theme</ModalOptions>}\n                <Button onPress={() => { this.setModalVisible(!modalVisible); }} >\n                  <ButtonText>Done</ButtonText>\n                </Button>\n              </ModalView>\n              }\n\n              \n            </ModalContainer>\n        </Modal>\n\n          <List.Section style={{padding: 5, alignSelf: \"stretch\" }}>\n      <List.Accordion\n        title=\"Theme Options\"\n        titleStyle={ {color: this.props.theme.GREY, fontFamily: \"text\", fontSize: 19}}\n        theme={{ colors: { primary: this.props.theme.PRIMARY_COLOR }}}\n        left={props => <List.Icon {...props} icon=\"format-paint\" color={this.props.theme.GREY}/>}>\n        <ListItem onPress={() => {\n            this.setModalVisible(true, \"lightTheme\");\n          }}> ⊳ Light Themes</ListItem>\n        <ListItem onPress={() => {\n            this.setModalVisible(true, \"darkTheme\");\n          }}> ⊳ Dark Themes</ListItem>\n      </List.Accordion>\n      <Line />\n\n      <List.Accordion\n        title=\"Account Details\"\n        titleStyle={ {color: this.props.theme.GREY, fontFamily: \"text\", fontSize: 19}}\n        theme={{ colors: { primary: this.props.theme.PRIMARY_COLOR }}}\n        left={props => <List.Icon {...props} icon=\"account-edit\" color={this.props.theme.GREY}/>}>\n        <ListItem onPress={() => {\n            this.setModalVisible(true);\n          }}> ⊳ Edit Details </ListItem>\n      </List.Accordion>\n      <Line />\n\n    </List.Section>\n\n    <Button onPress={() => this.props.navigation.navigate('SignUp')}>\n                        <ButtonText>go to SignUp ...</ButtonText>\n                    </Button>\n                    \n                    </SettingContainer>\n            </Container>\n        </ThemeProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theme: state.themeReducer.theme\n    }\n}\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n\nexport default connect(mapStateToProps, {pickTheme})(Settings);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}